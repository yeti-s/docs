{"version":3,"file":"component---src-components-templates-main-template-tsx-content-file-path-contents-index-mdx-361388a197ebf02e82e6.js","mappings":"gLAGA,SAASA,EAAkBC,GACzB,MAAMC,EAAcC,OAAOC,OAAO,CAChCC,EAAG,IACHC,EAAG,IACHC,GAAI,KACJC,KAAM,OACNC,GAAI,KACJC,OAAQ,SACRC,WAAY,aACZC,GAAI,KACJC,GAAI,KACJC,GAAI,KACJC,GAAI,OACHC,EAAAA,EAAAA,MAAsBf,EAAMgB,YAC/B,OAAOC,EAAAA,cAAoBA,EAAAA,SAAgB,KAAMA,EAAAA,cAAoBhB,EAAYG,EAAG,KAAM,qKAAsK,KAAMa,EAAAA,cAAoBhB,EAAYG,EAAG,KAAM,0HAA2H,KAAMa,EAAAA,cAAoBhB,EAAYG,EAAG,KAAM,WAAYa,EAAAA,cAAoBhB,EAAYI,EAAG,CACtgBa,KAAM,2DACL,yBAA0B,gHAAiH,KAAMD,EAAAA,cAAoBhB,EAAYK,GAAI,CACtLa,GAAI,WACH,WAAY,KAAMF,EAAAA,cAAoBhB,EAAYG,EAAG,KAAMa,EAAAA,cAAoBhB,EAAYM,KAAM,KAAM,kBAAmB,KAAMU,EAAAA,cAAoBhB,EAAYO,GAAI,CACrKW,GAAI,QACH,QAAS,KAAMF,EAAAA,cAAoBhB,EAAYG,EAAG,KAAMa,EAAAA,cAAoBhB,EAAYQ,OAAQ,KAAM,eAAgB,KAAMQ,EAAAA,cAAoBhB,EAAYS,WAAY,KAAM,KAAMO,EAAAA,cAAoBhB,EAAYG,EAAG,KAAM,MAAOa,EAAAA,cAAoBhB,EAAYM,KAAM,KAAM,yBAA0B,KAAMU,EAAAA,cAAoBhB,EAAYM,KAAM,KAAM,aAAc,iFAAkFU,EAAAA,cAAoBhB,EAAYM,KAAM,KAAM,aAAc,sHAAuHU,EAAAA,cAAoBhB,EAAYM,KAAM,KAAM,cAAe,kBAAmBU,EAAAA,cAAoBhB,EAAYM,KAAM,KAAM,cAAe,+EAAgF,MAAO,KAAMU,EAAAA,cAAoBhB,EAAYU,GAAI,KAAM,KAAMM,EAAAA,cAAoBhB,EAAYW,GAAI,KAAM,uCAAwC,KAAMK,EAAAA,cAAoBhB,EAAYW,GAAI,KAAM,YAAaK,EAAAA,cAAoBhB,EAAYM,KAAM,KAAM,iBAAkB,uBAAwB,MAAO,KAAMU,EAAAA,cAAoBhB,EAAYS,WAAY,KAAM,KAAMO,EAAAA,cAAoBhB,EAAYG,EAAG,KAAM,4EAA6E,MAAO,KAAMa,EAAAA,cAAoBhB,EAAYU,GAAI,KAAM,KAAMM,EAAAA,cAAoBhB,EAAYW,GAAI,KAAM,gCAAiC,KAAMK,EAAAA,cAAoBhB,EAAYW,GAAI,KAAM,uCAAwC,KAAMK,EAAAA,cAAoBhB,EAAYW,GAAI,KAAM,+CAAgD,KAAMK,EAAAA,cAAoBhB,EAAYW,GAAI,KAAM,oDAAqD,KAAMK,EAAAA,cAAoBhB,EAAYW,GAAI,KAAM,mCAAoC,KAAMK,EAAAA,cAAoBhB,EAAYW,GAAI,KAAM,sBAAuB,MAAO,KAAMK,EAAAA,cAAoBhB,EAAYS,WAAY,KAAM,KAAMO,EAAAA,cAAoBhB,EAAYG,EAAG,KAAMa,EAAAA,cAAoBhB,EAAYM,KAAM,KAAM,QAAS,qGAAsG,MAAO,KAAMU,EAAAA,cAAoBhB,EAAYU,GAAI,KAAM,KAAMM,EAAAA,cAAoBhB,EAAYW,GAAI,KAAM,gCAAiC,KAAMK,EAAAA,cAAoBhB,EAAYW,GAAI,KAAMK,EAAAA,cAAoBhB,EAAYM,KAAM,KAAM,WAAY,yBAA0B,KAAMU,EAAAA,cAAoBhB,EAAYW,GAAI,KAAM,kCAAmC,KAAMK,EAAAA,cAAoBhB,EAAYW,GAAI,KAAM,0BAA2BK,EAAAA,cAAoBhB,EAAYM,KAAM,KAAM,SAAU,WAAY,KAAMU,EAAAA,cAAoBhB,EAAYW,GAAI,KAAM,qCAAsC,MAAO,KAAMK,EAAAA,cAAoBhB,EAAYO,GAAI,CAC9tFW,GAAI,QACH,QAAS,KAAMF,EAAAA,cAAoBhB,EAAYG,EAAG,KAAMa,EAAAA,cAAoBhB,EAAYQ,OAAQ,KAAM,eAAgB,KAAMQ,EAAAA,cAAoBhB,EAAYU,GAAI,KAAM,KAAMM,EAAAA,cAAoBhB,EAAYW,GAAI,KAAM,0CAA2C,MAAO,KAAMK,EAAAA,cAAoBhB,EAAYG,EAAG,KAAMa,EAAAA,cAAoBhB,EAAYQ,OAAQ,KAAM,eAAgB,KAAMQ,EAAAA,cAAoBhB,EAAYU,GAAI,KAAM,KAAMM,EAAAA,cAAoBhB,EAAYW,GAAI,KAAM,kCAAmC,MAAO,KAAMK,EAAAA,cAAoBhB,EAAYG,EAAG,KAAMa,EAAAA,cAAoBhB,EAAYQ,OAAQ,KAAM,eAAgB,KAAMQ,EAAAA,cAAoBhB,EAAYU,GAAI,KAAM,KAAMM,EAAAA,cAAoBhB,EAAYW,GAAI,KAAM,qCAAsC,KAAMK,EAAAA,cAAoBhB,EAAYW,GAAI,KAAM,4CAA6C,MAAO,KAAMK,EAAAA,cAAoBhB,EAAYG,EAAG,KAAMa,EAAAA,cAAoBhB,EAAYQ,OAAQ,KAAM,eAAgB,KAAMQ,EAAAA,cAAoBhB,EAAYS,WAAY,KAAM,KAAMO,EAAAA,cAAoBhB,EAAYG,EAAG,KAAM,oBAAqB,MAAO,KAAMa,EAAAA,cAAoBhB,EAAYU,GAAI,KAAM,KAAMM,EAAAA,cAAoBhB,EAAYW,GAAI,KAAM,oCAAqC,KAAMK,EAAAA,cAAoBhB,EAAYW,GAAI,KAAM,oCAAqC,KAAMK,EAAAA,cAAoBhB,EAAYW,GAAI,KAAM,6BAA8B,MAAO,KAAMK,EAAAA,cAAoBhB,EAAYY,IAAK,KAAMI,EAAAA,cAAoBhB,EAAYG,EAAG,KAAMa,EAAAA,cAAoBhB,EAAYQ,OAAQ,KAAM,eAAgB,KAAMQ,EAAAA,cAAoBhB,EAAYS,WAAY,KAAM,KAAMO,EAAAA,cAAoBhB,EAAYG,EAAG,KAAM,sDAAuDa,EAAAA,cAAoBhB,EAAYa,IAAK,KAAM,6CAA8C,MAAO,KAAMG,EAAAA,cAAoBhB,EAAYU,GAAI,KAAM,KAAMM,EAAAA,cAAoBhB,EAAYW,GAAI,KAAM,wBAAyB,KAAMK,EAAAA,cAAoBhB,EAAYW,GAAI,KAAM,kCAAmC,KAAMK,EAAAA,cAAoBhB,EAAYW,GAAI,KAAM,6CAA8C,MAC1jE,CAKA,MAJA,SAAoBZ,QAAK,IAALA,IAAAA,EAAQ,CAAC,GAC3B,MAAOoB,QAASC,GAAanB,OAAOC,OAAO,CAAC,GAAGY,EAAAA,EAAAA,MAAsBf,EAAMgB,YAC3E,OAAOK,EAAYJ,EAAAA,cAAoBI,EAAWrB,EAAOiB,EAAAA,cAAoBlB,EAAmBC,IAAUD,EAAkBC,EAC9H,E,mLCLA,MAAMsB,EAAeC,IACnB,IAAKC,MAAM,IAACC,EAAG,KAAEC,GAAK,SAAEC,GAAYJ,EACpC,MAAMK,GAASC,EAAAA,EAAAA,KAAeC,EAAAA,EAAAA,IAAWC,EAAAA,IAAa,IAChDC,GAAcH,EAAAA,EAAAA,KAAeC,EAAAA,EAAAA,IAAWG,EAAAA,IAAY,IACpDC,GAAYC,EAAAA,EAAAA,KAAkBL,EAAAA,EAAAA,IAAWM,EAAAA,GAAsBX,EAAIY,gBAAgBC,QAIzF,OAHAC,EAAAA,EAAAA,YAAU,KACRL,EAAUT,EAAIY,gBAAgBC,MAAM,GACnC,CAACb,KACGe,EAAAA,EAAAA,IAAcC,EAAAA,EAAQ,MAAMD,EAAAA,EAAAA,IAAcE,EAAiB,MAAMF,EAAAA,EAAAA,IAAcG,EAAAA,EAAQ,QAAQH,EAAAA,EAAAA,IAAcI,EAAe,MAAMJ,EAAAA,EAAAA,IAAcK,EAAqB,CAC1KC,UAAW,aACXd,YAAaA,IACZQ,EAAAA,EAAAA,IAAcO,EAAO,MAAMP,EAAAA,EAAAA,IAAcQ,EAAAA,EAAY,SAASR,EAAAA,EAAAA,IAAcS,EAAkB,CAC/FjB,YAAaA,IACZQ,EAAAA,EAAAA,IAAcU,EAAgB,CAC/BtB,OAAQA,IACPY,EAAAA,EAAAA,IAAcW,EAAAA,EAAc,CAC7BC,MAAO3B,EAAI4B,YAAYD,MACvBE,aAAc5B,EAAK4B,gBACjBd,EAAAA,EAAAA,IAAce,EAAAA,GAAa,CAC7BvC,WAAY,CACVZ,EAAGoD,EAAAA,EACHlD,GAAImD,EAAAA,GACJjD,GAAIkD,EAAAA,GACJC,GAAIC,EAAAA,GACJC,GAAIC,EAAAA,GACJC,GAAIC,EAAAA,GACJC,GAAIC,EAAAA,GACJrD,GAAIsD,EAAAA,EACJzD,WAAY0D,EAAAA,EACZzD,GAAI0D,EAAAA,EACJC,GAAIC,EAAAA,EACJC,IAAKC,EAAAA,EACLlE,KAAMmE,EAAAA,IAEP/C,MAAaa,EAAAA,EAAAA,IAAcmC,EAAgB,MAAMnC,EAAAA,EAAAA,IAAcoC,EAAY,MAAMpC,EAAAA,EAAAA,IAAcqC,EAAAA,EAAgB,SAAS,EAGvHnC,GAAkBoC,EAAAA,EAAAA,GAAQ,MAA+C,CAC7EC,OAAQ,aADcD,CAKmB,CACzCE,KAAM,UACNC,OAAQ,kMAOJrC,GAAgBkC,EAAAA,EAAAA,GAAQ,MAA+C,CAC3EC,OAAQ,aADYD,CAKqB,CACzCE,KAAM,SACNC,OAAQ,mGAOJpC,GAAsBiC,EAAAA,EAAAA,GAAQ,QAAiD,CACnFC,OAAQ,aADkBD,CAKzB,gBAAgB1E,GAAKA,EAAE4B,YAAc,IAAM,mCAAmC,8LAA+LkD,EAAAA,EAAUC,SAAU,uBAC9RpC,GAAQ+B,EAAAA,EAAAA,GAAQ,MAA+C,CACnEC,OAAQ,aADID,CAK6B,CACzCE,KAAM,UACNC,OAAQ,8CAOJ/B,GAAiB4B,EAAAA,EAAAA,GAAQ,OAAgD,CAC7EC,OAAQ,aADaD,CAKpB,8CAA+CI,EAAAA,EAAUE,SAAU,cAAchF,GAAKA,EAAEwB,OAAS,MAAQ,OAAO,MAC7GqB,GAAmB6B,EAAAA,EAAAA,GAAQ,OAAgD,CAC/EC,OAAQ,aADeD,CAKtB,4JAA4J1E,GAAKA,EAAE4B,YAAc,GAAM,GAAG,uBAAwBkD,EAAAA,EAAUC,SAAU,mBACnOR,GAAiBG,EAAAA,EAAAA,GAAQ,QAAiD,CAC9EC,OAAQ,aADaD,CAKpB,sLAAuLI,EAAAA,EAAUG,GAAI,oCAClMT,GAAaE,EAAAA,EAAAA,GAAQ/B,EAA+C,CACxEgC,OAAQ,aADSD,CAKwB,CACzCE,KAAM,SACNC,OAAQ,0BAQK,SAASK,EAAiBtF,GACvC,OAAOiB,EAAAA,cAAoBK,EAActB,EAAOiB,EAAAA,cAAoBsE,EAAqBvF,GAC3F,C","sources":["webpack://yeti-docs/./contents/index.mdx","webpack://yeti-docs/./src/components/templates/MainTemplate.tsx"],"sourcesContent":["/*@jsxRuntime classic @jsx React.createElement @jsxFrag React.Fragment*/\nimport {useMDXComponents as _provideComponents} from \"@mdx-js/react\";\nimport React from \"react\";\nfunction _createMdxContent(props) {\n  const _components = Object.assign({\n    p: \"p\",\n    a: \"a\",\n    h1: \"h1\",\n    code: \"code\",\n    h2: \"h2\",\n    strong: \"strong\",\n    blockquote: \"blockquote\",\n    ul: \"ul\",\n    li: \"li\",\n    hr: \"hr\",\n    br: \"br\"\n  }, _provideComponents(), props.components);\n  return React.createElement(React.Fragment, null, React.createElement(_components.p, null, \"기존에 개발을 진행하면서 이전에 이용했던 기술에 대하여 다시금 사용해야 할 때가 종종 있었어요.\\r\\n그럴 때마다 예전 코드를 보며 기억을 상기하는 것이 생각보다 불편한 경험이더라고요.\\r\\n그래서 개발을 진행하며 공부한 내용이나 사용한 기술에 대해 정리하는 것이 필요하다고 느껴졌습니다.\"), \"\\n\", React.createElement(_components.p, null, \"이미 많은 템플릿과 블로그 플랫폼이 존재하지만, 3차원 포인트 클라우드 데이터를 화면에 올리던가 하는 작업이 필요할 것이라고 생각했어요.\\r\\n그래서 직접 커스텀할 수 있는 문서 사이트를 하나 만들기로 했습니다.\"), \"\\n\", React.createElement(_components.p, null, \"해당 페이지는 \", React.createElement(_components.a, {\n    href: \"https://www.gatsbyjs.com/plugins/gatsby-theme-document/\"\n  }, \"Gatsby Theme Document\"), \"를 기반으로 생성되었습니다.\\r\\n기반만 가져다가 쓴 것이고 많은 업데이트를 진행해서 거의 새로 만들었다고 볼 수 있으니 업데이트 이력을 아래에 적어둘게요.\\r\\n따로 추적관리하기 편할 거예요.\"), \"\\n\", React.createElement(_components.h1, {\n    id: \"업데이트-내역\"\n  }, \"업데이트 내역\"), \"\\n\", React.createElement(_components.p, null, React.createElement(_components.code, null, \"현재 버전 : 2.0.0\")), \"\\n\", React.createElement(_components.h2, {\n    id: \"버전-2\"\n  }, \"버전 2\"), \"\\n\", React.createElement(_components.p, null, React.createElement(_components.strong, null, \"2.0.0 업데이트\")), \"\\n\", React.createElement(_components.blockquote, null, \"\\n\", React.createElement(_components.p, null, \"기존 \", React.createElement(_components.code, null, \"Gatsby Theme Document\"), \"는 \", React.createElement(_components.code, null, \"Gatsby V2\"), \" 최신 버전의 패키지를 추가하는 부분에서 어려움을 겪었습니다.\\r\\n이에 추후 확장성을 위해 최신 버전으로 업그레이드가 필요하다고 판단하여 \", React.createElement(_components.code, null, \"Gatsby V5\"), \"로 업데이트를 진행하였습니다.\\r\\n버전의 차이가 크게 났기 때문에 많은 변경 사항이 발생하였고 호환되지 않는 부분이 많아 대부분의 기능을 새로 작성해야 하는 소요가 발생하였습니다.\\r\\n이 기회에 기존의 \", React.createElement(_components.code, null, \"javascript\"), \" 기반으로 이루어진 모듈을 \", React.createElement(_components.code, null, \"typescript\"), \" 기반으로 변경하여 효율 또한 높이고자 하였습니다.\\r\\n이에 따라 현재까지 작성한 문서의 일부가 기존 형식과 맞지 않을 수 있습니다.\"), \"\\n\"), \"\\n\", React.createElement(_components.ul, null, \"\\n\", React.createElement(_components.li, null, \"Gatsby v5, Typescript 기반으로 변경하였습니다.\"), \"\\n\", React.createElement(_components.li, null, \"모든 컴포넌트를 \", React.createElement(_components.code, null, \"Atomic Design\"), \" 패턴에 맞춰 새로 구성하였습니다.\"), \"\\n\"), \"\\n\", React.createElement(_components.blockquote, null, \"\\n\", React.createElement(_components.p, null, \"여러 기기에서 사용할 수 있도록 화면 크기에 따라 더욱 부드럽게 레이아웃을 변경하였습니다.\\r\\n또한 일부 기능을 추가하였습니다.\"), \"\\n\"), \"\\n\", React.createElement(_components.ul, null, \"\\n\", React.createElement(_components.li, null, \"테마가 Light, Dark 두 가지로 변경됩니다.\"), \"\\n\", React.createElement(_components.li, null, \"좌측 사이드바의 하위 목록이 부드럽게 나타나도록 변경하였습니다.\"), \"\\n\", React.createElement(_components.li, null, \"화면 크기가 변경함에 따라 좌우 사이드바가 축소하고 확장하도록 변경하였습니다.\"), \"\\n\", React.createElement(_components.li, null, \"좌측 사이드바가 축소하였을 때 생성되는 메뉴 버튼이 부드럽게 나타나도록 변경하였습니다.\"), \"\\n\", React.createElement(_components.li, null, \"문서 내용의 넓이를 확장 축소하는 버튼을 추가하였습니다.\"), \"\\n\", React.createElement(_components.li, null, \"인스타그램 버튼을 추가하였습니다.\"), \"\\n\"), \"\\n\", React.createElement(_components.blockquote, null, \"\\n\", React.createElement(_components.p, null, React.createElement(_components.code, null, \".mdx\"), \"파일을 사용하여 생성된 내용들의 UI에 많은 변화를 주었습니다.\\r\\n기본적으로 github의 스타일과 비슷하게 유지하였고, 일부는 문서 양식에 맞게 변경한 부분도 있습니다.\"), \"\\n\"), \"\\n\", React.createElement(_components.ul, null, \"\\n\", React.createElement(_components.li, null, \"문서 제목 부위에 유저와 수정된 날짜가 표기됩니다.\"), \"\\n\", React.createElement(_components.li, null, React.createElement(_components.code, null, \"Heading\"), \"의 크기와 구분선의 위치가 변경됩니다.\"), \"\\n\", React.createElement(_components.li, null, \"기존 인용 블럭이 작동되지 않던 오류를 수정하였습니다.\"), \"\\n\", React.createElement(_components.li, null, \"기존 붉은 글씨로 변하던 Code 형식이 \", React.createElement(_components.code, null, \"이와 같이\"), \" 표현됩니다.\"), \"\\n\", React.createElement(_components.li, null, \"Code Block이 Dark 테마에 맞춰 색을 변경합니다.\"), \"\\n\"), \"\\n\", React.createElement(_components.h2, {\n    id: \"버전-1\"\n  }, \"버전 1\"), \"\\n\", React.createElement(_components.p, null, React.createElement(_components.strong, null, \"1.1.3 업데이트\")), \"\\n\", React.createElement(_components.ul, null, \"\\n\", React.createElement(_components.li, null, \"일부 프로그램 언어에 대해서만 라인 넘버를 표시하도록 변경하였습니다.\"), \"\\n\"), \"\\n\", React.createElement(_components.p, null, React.createElement(_components.strong, null, \"1.1.2 업데이트\")), \"\\n\", React.createElement(_components.ul, null, \"\\n\", React.createElement(_components.li, null, \"모듈을 불러올 때 절대 경로를 사용하게 변경하였습니다.\"), \"\\n\"), \"\\n\", React.createElement(_components.p, null, React.createElement(_components.strong, null, \"1.1.1 업데이트\")), \"\\n\", React.createElement(_components.ul, null, \"\\n\", React.createElement(_components.li, null, \"컨텐츠 내용이 화면 사이즈에 맞춰 변화하도록 변경하였습니다.\"), \"\\n\", React.createElement(_components.li, null, \"일정 길이 이상의 콘텐츠 목차에 대해 줄임표를 생성하도록 변경하였습니다.\"), \"\\n\"), \"\\n\", React.createElement(_components.p, null, React.createElement(_components.strong, null, \"1.1.0 업데이트\")), \"\\n\", React.createElement(_components.blockquote, null, \"\\n\", React.createElement(_components.p, null, \"인터페이스 개선을 하였습니다.\"), \"\\n\"), \"\\n\", React.createElement(_components.ul, null, \"\\n\", React.createElement(_components.li, null, \"우측 사이드바 목록에 타이틀 계층 구조를 따라 표시합니다.\"), \"\\n\", React.createElement(_components.li, null, \"코드 블럭의 가독성을 높이기 위해 스타일을 변화시켰습니다.\"), \"\\n\", React.createElement(_components.li, null, \"컨텐츠 폴더 구조를 독립적으로 변경하였습니다.\"), \"\\n\"), \"\\n\", React.createElement(_components.hr), \"\\n\", React.createElement(_components.p, null, React.createElement(_components.strong, null, \"1.0.0 업데이트\")), \"\\n\", React.createElement(_components.blockquote, null, \"\\n\", React.createElement(_components.p, null, \"프로젝트를 진행하며 공부한 내용이나 개발 과정등을 기록으로 남기기 위해 블로그를 개설합니다.\", React.createElement(_components.br), \"\\n\", \"당장 필요한 혹은 개발 소요가 크지 않은 기능을 우선적으로 추가하였습니다.\"), \"\\n\"), \"\\n\", React.createElement(_components.ul, null, \"\\n\", React.createElement(_components.li, null, \"컨텐츠에 수식을 입력할 수 있습니다.\"), \"\\n\", React.createElement(_components.li, null, \"좌측 사이드바 목록이 오름차순으로 정렬되어 보여집니다.\"), \"\\n\", React.createElement(_components.li, null, \"좌측 사이드바 하위 목록을 가진 컨텐츠의 기본 상태가 접힌 상태가 됩니다.\"), \"\\n\"));\n}\nfunction MDXContent(props = {}) {\n  const {wrapper: MDXLayout} = Object.assign({}, _provideComponents(), props.components);\n  return MDXLayout ? React.createElement(MDXLayout, props, React.createElement(_createMdxContent, props)) : _createMdxContent(props);\n}\nexport default MDXContent;\n","import GATSBY_COMPILED_MDX from \"C:/Users/yeti/Documents/github/docs/contents/index.mdx\";\nimport _styled from \"@emotion/styled/base\";\nfunction _EMOTION_STRINGIFIED_CSS_ERROR__() {\n  return \"You have tried to stringify object returned from `css` function. It isn't supposed to be used directly (e.g. as value of the `className` prop), but rather handed to emotion so it can handle it (e.g. as value of `css` prop).\";\n}\nimport React, {useEffect} from \"react\";\nimport Layout from \"@src/Layout\";\nimport Navigation from \"@src/components/organisms/navigation/Navigation\";\nimport TableOfContent from \"@src/components/organisms/toc/TableOfContent\";\nimport Header from \"@src/components/organisms/header/Header\";\nimport ContentTitle from \"@src/components/organisms/content/ContentTitle\";\nimport {MDXProvider} from \"@mdx-js/react\";\nimport {useRecoilValue, useSetRecoilState} from \"recoil\";\nimport {createAtom, TOGGLE_WIDE, TOGGLE_NAV, SET_TABLE_OF_CONTENT} from \"@src/context/atoms\";\nimport MediaSize from \"@src/styles/media\";\nimport 'katex/dist/katex.min.css';\nimport P from \"@src/components/mdx/Paragraph\";\nimport {H1, H2, H3, H4, H5, H6} from \"@src/components/mdx/Heading\";\nimport ThematicBreak from \"@src/components/mdx/ThematicBreak\";\nimport Blockquote from \"@src/components/mdx/Blockquote\";\nimport List from \"@src/components/mdx/List\";\nimport UnorderedList from \"@src/components/mdx/UnorderedList\";\nimport CodeBlock from \"@src/components/mdx/CodeBlock\";\nimport Code from \"@src/components/mdx/Code\";\nimport {jsx as ___EmotionJSX} from \"@emotion/react\";\nconst MainTemplate = _ref => {\n  let {data: {mdx, file}, children} = _ref;\n  const isWide = useRecoilValue(createAtom(TOGGLE_WIDE, false));\n  const isNavOpened = useRecoilValue(createAtom(TOGGLE_NAV, false));\n  const tocSetter = useSetRecoilState(createAtom(SET_TABLE_OF_CONTENT, mdx.tableOfContents.items));\n  useEffect(() => {\n    tocSetter(mdx.tableOfContents.items);\n  }, [mdx]);\n  return ___EmotionJSX(Layout, null, ___EmotionJSX(HeaderInterface, null, ___EmotionJSX(Header, null)), ___EmotionJSX(BodyInterface, null, ___EmotionJSX(NavigationInterface, {\n    className: \"navigation\",\n    isNavOpened: isNavOpened\n  }, ___EmotionJSX(Fixer, null, ___EmotionJSX(Navigation, null))), ___EmotionJSX(ContentInterface, {\n    isNavOpened: isNavOpened\n  }, ___EmotionJSX(ContentWrapper, {\n    isWide: isWide\n  }, ___EmotionJSX(ContentTitle, {\n    title: mdx.frontmatter.title,\n    modifiedTime: file.modifiedTime\n  }), ___EmotionJSX(MDXProvider, {\n    components: {\n      p: P,\n      h1: H1,\n      h2: H2,\n      h3: H3,\n      h4: H4,\n      h5: H5,\n      h6: H6,\n      hr: ThematicBreak,\n      blockquote: Blockquote,\n      ul: UnorderedList,\n      ol: List,\n      pre: CodeBlock,\n      code: Code\n    }\n  }, children))), ___EmotionJSX(TableInterface, null, ___EmotionJSX(TableFixer, null, ___EmotionJSX(TableOfContent, null)))));\n};\nconst query = \"2309171429\";\nconst HeaderInterface = _styled(\"div\", process.env.NODE_ENV === \"production\" ? {\n  target: \"e1ojob7j7\"\n} : {\n  target: \"e1ojob7j7\",\n  label: \"HeaderInterface\"\n})(process.env.NODE_ENV === \"production\" ? {\n  name: \"11t2x7x\",\n  styles: \"display:flex;height:var(--header-height);z-index:5;padding:0.6rem 2rem 0.6rem 0.6rem;position:fixed;width:100%;background:var(--background-color);border-bottom:1px solid var(--border-color)\"\n} : {\n  name: \"11t2x7x\",\n  styles: \"display:flex;height:var(--header-height);z-index:5;padding:0.6rem 2rem 0.6rem 0.6rem;position:fixed;width:100%;background:var(--background-color);border-bottom:1px solid var(--border-color)\",\n  map: \"/*# sourceMappingURL=data:application/json;charset=utf-8;base64, */\",\n  toString: _EMOTION_STRINGIFIED_CSS_ERROR__\n});\nconst BodyInterface = _styled(\"div\", process.env.NODE_ENV === \"production\" ? {\n  target: \"e1ojob7j6\"\n} : {\n  target: \"e1ojob7j6\",\n  label: \"BodyInterface\"\n})(process.env.NODE_ENV === \"production\" ? {\n  name: \"majwgz\",\n  styles: \"position:relative;display:flex;min-height:calc(100vh - var(--header-height));overflow-x:hidden\"\n} : {\n  name: \"majwgz\",\n  styles: \"position:relative;display:flex;min-height:calc(100vh - var(--header-height));overflow-x:hidden\",\n  map: \"/*# sourceMappingURL=data:application/json;charset=utf-8;base64, */\",\n  toString: _EMOTION_STRINGIFIED_CSS_ERROR__\n});\nconst NavigationInterface = _styled(\"aside\", process.env.NODE_ENV === \"production\" ? {\n  target: \"e1ojob7j5\"\n} : {\n  target: \"e1ojob7j5\",\n  label: \"NavigationInterface\"\n})(\"margin-left:\", p => p.isNavOpened ? '0' : 'calc(-1 * var(--sidebar-width))', \";flex:0 0 var(--sidebar-width);font-size:0.875rem;overflow-x:hidden;overflow-y:auto;padding-top:var(--body-padding-top);transition:margin 0.25s var(--ease-in-out-quad);@media (min-width: \", MediaSize.IPAD_PRO, \"px){margin-left:0;}\" + (process.env.NODE_ENV === \"production\" ? \"\" : \"/*# sourceMappingURL=data:application/json;charset=utf-8;base64, */\"));\nconst Fixer = _styled(\"nav\", process.env.NODE_ENV === \"production\" ? {\n  target: \"e1ojob7j4\"\n} : {\n  target: \"e1ojob7j4\",\n  label: \"Fixer\"\n})(process.env.NODE_ENV === \"production\" ? {\n  name: \"1u006gd\",\n  styles: \"position:fixed;width:var(--sidebar-width)\"\n} : {\n  name: \"1u006gd\",\n  styles: \"position:fixed;width:var(--sidebar-width)\",\n  map: \"/*# sourceMappingURL=data:application/json;charset=utf-8;base64, */\",\n  toString: _EMOTION_STRINGIFIED_CSS_ERROR__\n});\nconst ContentWrapper = _styled(\"main\", process.env.NODE_ENV === \"production\" ? {\n  target: \"e1ojob7j3\"\n} : {\n  target: \"e1ojob7j3\",\n  label: \"ContentWrapper\"\n})(\"padding:1rem;width:100%;@media (min-width: \", MediaSize.IPAD_AIR, \"px){width:\", p => p.isWide ? '90%' : '65%', \";}\" + (process.env.NODE_ENV === \"production\" ? \"\" : \"/*# sourceMappingURL=data:application/json;charset=utf-8;base64, */\"));\nconst ContentInterface = _styled(\"main\", process.env.NODE_ENV === \"production\" ? {\n  target: \"e1ojob7j2\"\n} : {\n  target: \"e1ojob7j2\",\n  label: \"ContentInterface\"\n})(\"width:calc(100% - 2 * var(--sidebar-width));padding-top:var(--body-padding-top);flex-grow:1;min-width:20rem;display:flex;justify-content:center;opacity:\", p => p.isNavOpened ? 0.3 : 1, \";@media (min-width: \", MediaSize.IPAD_PRO, \"px){opacity:1;}\" + (process.env.NODE_ENV === \"production\" ? \"\" : \"/*# sourceMappingURL=data:application/json;charset=utf-8;base64, */\"));\nconst TableInterface = _styled(\"aside\", process.env.NODE_ENV === \"production\" ? {\n  target: \"e1ojob7j1\"\n} : {\n  target: \"e1ojob7j1\",\n  label: \"TableInterface\"\n})(\"font-size:0.75rem;font-weight:bold;overflow-x:hidden;overflow-y:auto;padding-top:var(--body-padding-top);width:0;transition:width 0.25s var(--ease-in-out-quad);@media (min-width: \", MediaSize.HD, \"px){width:var(--sidebar-width);}\" + (process.env.NODE_ENV === \"production\" ? \"\" : \"/*# sourceMappingURL=data:application/json;charset=utf-8;base64, */\"));\nconst TableFixer = _styled(Fixer, process.env.NODE_ENV === \"production\" ? {\n  target: \"e1ojob7j0\"\n} : {\n  target: \"e1ojob7j0\",\n  label: \"TableFixer\"\n})(process.env.NODE_ENV === \"production\" ? {\n  name: \"b40oxt\",\n  styles: \"padding:0 1rem 0 1rem\"\n} : {\n  name: \"b40oxt\",\n  styles: \"padding:0 1rem 0 1rem\",\n  map: \"/*# sourceMappingURL=data:application/json;charset=utf-8;base64, */\",\n  toString: _EMOTION_STRINGIFIED_CSS_ERROR__\n});\nMainTemplate\nexport default function GatsbyMDXWrapper(props) {\n  return React.createElement(MainTemplate, props, React.createElement(GATSBY_COMPILED_MDX, props));\n}\n"],"names":["_createMdxContent","props","_components","Object","assign","p","a","h1","code","h2","strong","blockquote","ul","li","hr","br","_provideComponents","components","React","href","id","wrapper","MDXLayout","MainTemplate","_ref","data","mdx","file","children","isWide","useRecoilValue","createAtom","TOGGLE_WIDE","isNavOpened","TOGGLE_NAV","tocSetter","useSetRecoilState","SET_TABLE_OF_CONTENT","tableOfContents","items","useEffect","___EmotionJSX","Layout","HeaderInterface","Header","BodyInterface","NavigationInterface","className","Fixer","Navigation","ContentInterface","ContentWrapper","ContentTitle","title","frontmatter","modifiedTime","MDXProvider","P","H1","H2","h3","H3","h4","H4","h5","H5","h6","H6","ThematicBreak","Blockquote","UnorderedList","ol","List","pre","CodeBlock","Code","TableInterface","TableFixer","TableOfContent","_styled","target","name","styles","MediaSize","IPAD_PRO","IPAD_AIR","HD","GatsbyMDXWrapper","GATSBY_COMPILED_MDX"],"sourceRoot":""}