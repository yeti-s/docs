{"version":3,"file":"component---src-components-templates-main-template-tsx-content-file-path-contents-coding-test-02-150365-mdx-f3047c42b65423a44c98.js","mappings":"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","sources":["webpack://yeti-docs/./contents/coding_test/components/MiniBox.jsx","webpack://yeti-docs/./contents/coding_test/components/TestInfo.jsx","webpack://yeti-docs/./contents/coding_test/02_150365.mdx","webpack://yeti-docs/./src/components/templates/MainTemplate.tsx"],"sourcesContent":["import React from \"react\";\r\n\r\nconst theme = {\r\n    'warning': {\r\n        color: '#ffffff',\r\n        borderColor: '#ffeb9d',\r\n        backgroundColor: '#fdd510'\r\n    },\r\n    'error': {\r\n        color: '#ffffff',\r\n        borderColor: '#ffeb9d',\r\n        backgroundColor: '#ff0909'\r\n    },\r\n    'info': {\r\n        color: '#ffffff',\r\n        borderColor: '#ffeb9d',\r\n        backgroundColor: '#107afd'\r\n    }\r\n}\r\n\r\nconst MiniBox = ({color, text}) => {\r\n    const style = {\r\n        backgroundColor: color,\r\n        color: theme[color].color,\r\n        borderColor: theme[color].borderColor,\r\n        backgroundColor: theme[color].backgroundColor,\r\n        width: 65,\r\n        height: 27,\r\n        border: '1px solid',\r\n        borderRadius: '1rem',\r\n        textAlign: 'center',\r\n        margin: '0px 4px 0px 4px',\r\n        fontFamily: `\"IBM Plex Sans\",-apple-system,BlinkMacSystemFont,sans-serif`\r\n    }\r\n\r\n    return <div style={style}>{text}</div>\r\n}\r\n\r\nexport default MiniBox","import React from \"react\";\r\nimport MiniBox from \"./MiniBox\";\r\n\r\nconst style = {\r\n    wrapper: {\r\n        display: 'flex',\r\n        alignItems: 'center'\r\n    },\r\n    level_box: {\r\n        width: 35,\r\n        backgroundColor: 'yellow'\r\n    }\r\n}\r\n\r\nconst TestInfo = ({url, level, solved}) => {\r\n    return (\r\n        <div style={style.wrapper} href={url}>\r\n            <MiniBox color=\"warning\" text={`Lv. ${level}`}/>\r\n            <MiniBox color={solved ? \"info\" : \"error\"} text={solved ? 'sol':'unsol'}/>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default TestInfo","/*@jsxRuntime classic @jsx React.createElement @jsxFrag React.Fragment*/\nimport {useMDXComponents as _provideComponents} from \"@mdx-js/react\";\nimport React from \"react\";\nimport TestInfo from './components/TestInfo';\nfunction _createMdxContent(props) {\n  const _components = Object.assign({\n    h1: \"h1\",\n    p: \"p\",\n    ol: \"ol\",\n    li: \"li\",\n    code: \"code\",\n    ul: \"ul\",\n    br: \"br\",\n    pre: \"pre\"\n  }, _provideComponents(), props.components);\n  return React.createElement(React.Fragment, null, React.createElement(TestInfo, {\n    url: \"https://school.programmers.co.kr/learn/courses/30/lessons/150365\",\n    level: 3,\n    solved: true\n  }), \"\\n\", React.createElement(_components.h1, {\n    id: \"문제-분석\"\n  }, \"문제 분석\"), \"\\n\", React.createElement(_components.p, null, \"미로를 탈출하는 규칙은 아래와 같아요.\"), \"\\n\", React.createElement(_components.ol, null, \"\\n\", React.createElement(_components.li, null, React.createElement(_components.code, null, \"n x m\"), \" 격자 미로에서 당신은 \", React.createElement(_components.code, null, \"(x, y)\"), \"에서 출발해 \", React.createElement(_components.code, null, \"(r, c)\"), \"로 탈출해야 합니다.\"), \"\\n\", React.createElement(_components.li, null, \"단 \", React.createElement(_components.code, null, \"(x, y)\"), \"에서 \", React.createElement(_components.code, null, \"(r, c)\"), \"까지 이동하는 거리가 총 \", React.createElement(_components.code, null, \"k\"), \"여야 해요.\"), \"\\n\", React.createElement(_components.li, null, \"이때, \", React.createElement(_components.code, null, \"(x, y)\"), \"와 \", React.createElement(_components.code, null, \"(r, c)\"), \"를 포함해, 같은 격자를 두 번 이상 방문해도 됩니다.\"), \"\\n\"), \"\\n\", React.createElement(_components.p, null, \"위 과정에서 이동한 경로를 아래와 같은 문자열로 바꾸어 저장할 거예요.\"), \"\\n\", React.createElement(_components.ul, null, \"\\n\", React.createElement(_components.li, null, \"l: 왼쪽으로 한 칸 이동\"), \"\\n\", React.createElement(_components.li, null, \"r: 오른쪽으로 한 칸 이동\"), \"\\n\", React.createElement(_components.li, null, \"u: 위쪽으로 한 칸 이동\"), \"\\n\", React.createElement(_components.li, null, \"d: 아래쪽으로 한 칸 이동\"), \"\\n\"), \"\\n\", React.createElement(_components.p, null, \"이 때 이동한 경로를 문자열로 표시한 것 중 사전 순으로 가장 빠른 경로로 탈출한 것을 선택할 거예요.\", React.createElement(_components.br), \"\\n\", \"예를 들어 \", React.createElement(_components.code, null, \"3 x 4\"), \" 격자 미로에 \", React.createElement(_components.code, null, \"(x, y)\"), \"에서 출발하여 \", React.createElement(_components.code, null, \"(r, c)\"), \"까지 갈 때 \", React.createElement(_components.code, null, \"k=5\"), \"라면 아래와 같은 문자열이 생성됩니다.\"), \"\\n\", React.createElement(_components.ul, null, \"\\n\", React.createElement(_components.li, null, \"lldud\"), \"\\n\", React.createElement(_components.li, null, \"ulldd\"), \"\\n\", React.createElement(_components.li, null, \"rdlll\"), \"\\n\", React.createElement(_components.li, null, \"dllrl\"), \"\\n\", React.createElement(_components.li, null, \"dllud\"), \"\\n\", React.createElement(_components.li, null, \"...\"), \"\\n\"), \"\\n\", React.createElement(_components.p, null, \"이때 dllrl이 사전 순으로 가장 빠른 경로로 탈출하는 경우네요.\", React.createElement(_components.br), \"\\n\", \"만약 위 조건에서 탈출할 수 없다면 \", React.createElement(_components.code, null, \"\\\"impossible\\\"\"), \"을 반환합니다.\"), \"\\n\", React.createElement(_components.p, null, \"이 문제는 출발점과 도착점 사이 거리보다 k가 클 경우 일부러 반복되는 움직임을 만들어야 합니다.\\r\\n만약 한번 위로 간다면 한번은 아래로, 한번 왼쪽으로 간다면 한번은 오른쪽으로 움직이는 것과 같이 의미 없는 움직임 말이죠.\\r\\n따라서 '거리 - k'가 짝수가 되어야 의미 없는 움직임을 해도 다시 돌아올 수 있어요.\"), \"\\n\", React.createElement(_components.p, null, \"또한 움직임에는 'd > l > r > u' 순서로 우선순위가 부여됩니다.\\r\\n그렇기에 우리는 목표 지점으로 가거나, 의미없는 움직임을 만들려면 최대한 아래쪽으로 우선적으로 이동하는 것이 포인트네요.\"), \"\\n\", React.createElement(_components.h1, {\n    id: \"풀이\"\n  }, \"풀이\"), \"\\n\", React.createElement(_components.p, null, \"우리는 먼저 불가능한 경우를 제거해볼 거예요.\\r\\n위에서 언급한대로 '거리 - k'가 홀수 인 경우를 말이죠.\"), \"\\n\", React.createElement(_components.pre, null, React.createElement(_components.code, {\n    className: \"language-python\"\n  }, \"def solution(n, m, x, y, r, c, k):\\r\\n    answer = ''\\r\\n\\r\\n    l1_dist = abs(x-r) + abs(y-c)\\r\\n    if l1_dist > k or (k - l1_dist) % 2 == 1:\\r\\n        return 'impossible'\\r\\n    \\r\\n    ...\\n\")), \"\\n\", React.createElement(_components.p, null, \"이동해야 하는 거리, L1 distance를 구한 후 k와 비교를 해 홀수가 되는 애들을 걸러주었어요.\"), \"\\n\", React.createElement(_components.p, null, \"이제 우리는 의미 없는 움직임을 할지, 목표 지점으로 갈지 정해야 해요.\\r\\n만약 목표 지점까지 거리가 k보다 크면 의미 없는 움직임을 해도 된다는 이야기죠.\\r\\n이런 움직임이 목표 지점으로 가는 루트라면 어떨까요?\\r\\n의미 없는 움직임을 한번 더 할 수 있다는 소리겠네요.\\r\\n뭐 큰 의미는 없어요.\\r\\n우리는 그저 탈출 루트와 겹치던 말던 우선순위를 따라 의미 없는 움직임을 하는 것입니다.\\r\\nk와 목표 지점까지 거리가 같아질 때 까지!\\r\\n그리고 같아질 때 우리는 목표 지점을 향해 이동하는 것으로 알고리즘을 완성할 수 있겠어요.\"), \"\\n\", React.createElement(_components.pre, null, React.createElement(_components.code, {\n    className: \"language-python\"\n  }, \"def solution(n, m, x, y, r, c, k):\\r\\n    ...\\r\\n    while k > 0:\\r\\n        l1_dist = abs(x-r) + abs(y-c)\\r\\n        if k > l1_dist:\\r\\n            if x < n:\\r\\n                x += 1\\r\\n                answer += 'd'\\r\\n            elif y > 1:\\r\\n                y -= 1\\r\\n                answer += 'l'\\r\\n            elif y < m:\\r\\n                y += 1\\r\\n                answer += 'r'\\r\\n            elif x > 1:\\r\\n                x -= 1\\r\\n                answer += 'u'\\r\\n        # find route\\r\\n        else:\\r\\n            if x < r:\\r\\n                x += 1\\r\\n                answer += 'd'\\r\\n            elif y > c:\\r\\n                y -= 1\\r\\n                answer += 'l'\\r\\n            elif y < c:\\r\\n                y += 1\\r\\n                answer += 'r'\\r\\n            elif x > r:\\r\\n                x -= 1\\r\\n                answer += 'u'\\r\\n        k -= 1\\r\\n\\r\\n    retun answer\\n\")), \"\\n\", React.createElement(_components.p, null, \"거리와 k를 계속해서 갱신하여 의미 없는 움직임을 할지, 탈출구를 향해 갈지 결정을 반복하는 것이에요.\\r\\n물론 우선순위에 따라 어느 곳을 먼저 갈지 결정을 해 주고요.\\r\\n문제가 생각보다 간단하네요.\"));\n}\nfunction MDXContent(props = {}) {\n  const {wrapper: MDXLayout} = Object.assign({}, _provideComponents(), props.components);\n  return MDXLayout ? React.createElement(MDXLayout, props, React.createElement(_createMdxContent, props)) : _createMdxContent(props);\n}\nexport default MDXContent;\n","import GATSBY_COMPILED_MDX from \"C:/Users/yeti/Documents/github/docs/contents/coding_test/02_150365.mdx\";\nimport _styled from \"@emotion/styled/base\";\nfunction _EMOTION_STRINGIFIED_CSS_ERROR__() {\n  return \"You have tried to stringify object returned from `css` function. It isn't supposed to be used directly (e.g. as value of the `className` prop), but rather handed to emotion so it can handle it (e.g. as value of `css` prop).\";\n}\nimport React, {useEffect} from \"react\";\nimport Layout from \"@src/Layout\";\nimport Navigation from \"@src/components/organisms/navigation/Navigation\";\nimport TableOfContent from \"@src/components/organisms/toc/TableOfContent\";\nimport Header from \"@src/components/organisms/header/Header\";\nimport ContentTitle from \"@src/components/organisms/content/ContentTitle\";\nimport {MDXProvider} from \"@mdx-js/react\";\nimport {useRecoilValue, useSetRecoilState} from \"recoil\";\nimport {createAtom, TOGGLE_WIDE, TOGGLE_NAV, SET_TABLE_OF_CONTENT} from \"@src/context/atoms\";\nimport MediaSize from \"@src/styles/media\";\nimport 'katex/dist/katex.min.css';\nimport P from \"@src/components/mdx/Paragraph\";\nimport {H1, H2, H3, H4, H5, H6} from \"@src/components/mdx/Heading\";\nimport ThematicBreak from \"@src/components/mdx/ThematicBreak\";\nimport Blockquote from \"@src/components/mdx/Blockquote\";\nimport List from \"@src/components/mdx/List\";\nimport UnorderedList from \"@src/components/mdx/UnorderedList\";\nimport CodeBlock from \"@src/components/mdx/CodeBlock\";\nimport Code from \"@src/components/mdx/Code\";\nimport {jsx as ___EmotionJSX} from \"@emotion/react\";\nconst MainTemplate = _ref => {\n  let {data: {mdx, file}, children} = _ref;\n  const isWide = useRecoilValue(createAtom(TOGGLE_WIDE, false));\n  const isNavOpened = useRecoilValue(createAtom(TOGGLE_NAV, false));\n  const tocSetter = useSetRecoilState(createAtom(SET_TABLE_OF_CONTENT, mdx.tableOfContents.items));\n  useEffect(() => {\n    tocSetter(mdx.tableOfContents.items);\n  }, [mdx]);\n  return ___EmotionJSX(Layout, null, ___EmotionJSX(HeaderInterface, null, ___EmotionJSX(Header, null)), ___EmotionJSX(BodyInterface, null, ___EmotionJSX(NavigationInterface, {\n    className: \"navigation\",\n    isNavOpened: isNavOpened\n  }, ___EmotionJSX(Fixer, null, ___EmotionJSX(Navigation, null))), ___EmotionJSX(ContentInterface, {\n    isNavOpened: isNavOpened\n  }, ___EmotionJSX(ContentWrapper, {\n    isWide: isWide\n  }, ___EmotionJSX(ContentTitle, {\n    title: mdx.frontmatter.title,\n    modifiedTime: file.modifiedTime\n  }), ___EmotionJSX(MDXProvider, {\n    components: {\n      p: P,\n      h1: H1,\n      h2: H2,\n      h3: H3,\n      h4: H4,\n      h5: H5,\n      h6: H6,\n      hr: ThematicBreak,\n      blockquote: Blockquote,\n      ul: UnorderedList,\n      ol: List,\n      pre: CodeBlock,\n      code: Code\n    }\n  }, children))), ___EmotionJSX(TableInterface, null, ___EmotionJSX(TableFixer, null, ___EmotionJSX(TableOfContent, null)))));\n};\nconst query = \"2309171429\";\nconst HeaderInterface = _styled(\"div\", process.env.NODE_ENV === \"production\" ? {\n  target: \"e1ojob7j7\"\n} : {\n  target: \"e1ojob7j7\",\n  label: \"HeaderInterface\"\n})(process.env.NODE_ENV === \"production\" ? {\n  name: \"11t2x7x\",\n  styles: \"display:flex;height:var(--header-height);z-index:5;padding:0.6rem 2rem 0.6rem 0.6rem;position:fixed;width:100%;background:var(--background-color);border-bottom:1px solid var(--border-color)\"\n} : {\n  name: \"11t2x7x\",\n  styles: \"display:flex;height:var(--header-height);z-index:5;padding:0.6rem 2rem 0.6rem 0.6rem;position:fixed;width:100%;background:var(--background-color);border-bottom:1px solid var(--border-color)\",\n  map: \"/*# sourceMappingURL=data:application/json;charset=utf-8;base64, */\",\n  toString: _EMOTION_STRINGIFIED_CSS_ERROR__\n});\nconst BodyInterface = _styled(\"div\", process.env.NODE_ENV === \"production\" ? {\n  target: \"e1ojob7j6\"\n} : {\n  target: \"e1ojob7j6\",\n  label: \"BodyInterface\"\n})(process.env.NODE_ENV === \"production\" ? {\n  name: \"majwgz\",\n  styles: \"position:relative;display:flex;min-height:calc(100vh - var(--header-height));overflow-x:hidden\"\n} : {\n  name: \"majwgz\",\n  styles: \"position:relative;display:flex;min-height:calc(100vh - var(--header-height));overflow-x:hidden\",\n  map: \"/*# sourceMappingURL=data:application/json;charset=utf-8;base64, */\",\n  toString: _EMOTION_STRINGIFIED_CSS_ERROR__\n});\nconst NavigationInterface = _styled(\"aside\", process.env.NODE_ENV === \"production\" ? {\n  target: \"e1ojob7j5\"\n} : {\n  target: \"e1ojob7j5\",\n  label: \"NavigationInterface\"\n})(\"margin-left:\", p => p.isNavOpened ? '0' : 'calc(-1 * var(--sidebar-width))', \";flex:0 0 var(--sidebar-width);font-size:0.875rem;overflow-x:hidden;overflow-y:auto;padding-top:var(--body-padding-top);transition:margin 0.25s var(--ease-in-out-quad);@media (min-width: \", MediaSize.IPAD_PRO, \"px){margin-left:0;}\" + (process.env.NODE_ENV === \"production\" ? \"\" : \"/*# sourceMappingURL=data:application/json;charset=utf-8;base64, */\"));\nconst Fixer = _styled(\"nav\", process.env.NODE_ENV === \"production\" ? {\n  target: \"e1ojob7j4\"\n} : {\n  target: \"e1ojob7j4\",\n  label: \"Fixer\"\n})(process.env.NODE_ENV === \"production\" ? {\n  name: \"1u006gd\",\n  styles: \"position:fixed;width:var(--sidebar-width)\"\n} : {\n  name: \"1u006gd\",\n  styles: \"position:fixed;width:var(--sidebar-width)\",\n  map: \"/*# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIkM6XFxVc2Vyc1xceWV0aVxcRG9jdW1lbnRzXFxnaXRodWJcXGRvY3NcXHNyY1xcY29tcG9uZW50c1xcdGVtcGxhdGVzXFxNYWluVGVtcGxhdGUudHN4Il0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiJBQXdKd0IiLCJmaWxlIjoiQzpcXFVzZXJzXFx5ZXRpXFxEb2N1bWVudHNcXGdpdGh1YlxcZG9jc1xcc3JjXFxjb21wb25lbnRzXFx0ZW1wbGF0ZXNcXE1haW5UZW1wbGF0ZS50c3giLCJzb3VyY2VzQ29udGVudCI6WyJpbXBvcnQgUmVhY3QsIHsgdXNlRWZmZWN0IH0gZnJvbSBcInJlYWN0XCI7XHJcbmltcG9ydCBzdHlsZWQgZnJvbSBcIkBlbW90aW9uL3N0eWxlZFwiO1xyXG5cclxuaW1wb3J0IExheW91dCBmcm9tIFwiQHNyYy9MYXlvdXRcIjtcclxuaW1wb3J0IE5hdmlnYXRpb24gZnJvbSBcIkBzcmMvY29tcG9uZW50cy9vcmdhbmlzbXMvbmF2aWdhdGlvbi9OYXZpZ2F0aW9uXCI7XHJcbmltcG9ydCBUYWJsZU9mQ29udGVudCBmcm9tIFwiQHNyYy9jb21wb25lbnRzL29yZ2FuaXNtcy90b2MvVGFibGVPZkNvbnRlbnRcIjtcclxuaW1wb3J0IEhlYWRlciBmcm9tIFwiQHNyYy9jb21wb25lbnRzL29yZ2FuaXNtcy9oZWFkZXIvSGVhZGVyXCI7XHJcbmltcG9ydCBDb250ZW50VGl0bGUgZnJvbSBcIkBzcmMvY29tcG9uZW50cy9vcmdhbmlzbXMvY29udGVudC9Db250ZW50VGl0bGVcIjtcclxuXHJcbmltcG9ydCB0eXBlIHsgUGFnZVByb3BzIH0gZnJvbSBcImdhdHNieVwiO1xyXG5pbXBvcnQgeyBncmFwaHFsIH0gZnJvbSBcImdhdHNieVwiO1xyXG5pbXBvcnQgeyBNRFhQcm92aWRlciB9IGZyb20gXCJAbWR4LWpzL3JlYWN0XCI7XHJcbmltcG9ydCB7IHVzZVJlY29pbFZhbHVlLCB1c2VTZXRSZWNvaWxTdGF0ZSB9IGZyb20gXCJyZWNvaWxcIjtcclxuaW1wb3J0IHsgY3JlYXRlQXRvbSwgVE9HR0xFX1dJREUsIFRPR0dMRV9OQVYsIFNFVF9UQUJMRV9PRl9DT05URU5UIH0gZnJvbSBcIkBzcmMvY29udGV4dC9hdG9tc1wiO1xyXG5pbXBvcnQgTWVkaWFTaXplIGZyb20gXCJAc3JjL3N0eWxlcy9tZWRpYVwiO1xyXG5pbXBvcnQgJ2thdGV4L2Rpc3Qva2F0ZXgubWluLmNzcydcclxuXHJcbi8qIC0tLWN1c3RvbSBNRFggY29tcG9uZW50cy0tLSAqL1xyXG5pbXBvcnQgUCBmcm9tIFwiQHNyYy9jb21wb25lbnRzL21keC9QYXJhZ3JhcGhcIjtcclxuaW1wb3J0IHsgSDEsIEgyLCBIMywgSDQsIEg1LCBINiB9IGZyb20gXCJAc3JjL2NvbXBvbmVudHMvbWR4L0hlYWRpbmdcIjtcclxuaW1wb3J0IFRoZW1hdGljQnJlYWsgZnJvbSBcIkBzcmMvY29tcG9uZW50cy9tZHgvVGhlbWF0aWNCcmVha1wiO1xyXG5pbXBvcnQgQmxvY2txdW90ZSBmcm9tIFwiQHNyYy9jb21wb25lbnRzL21keC9CbG9ja3F1b3RlXCI7XHJcbmltcG9ydCBMaXN0IGZyb20gXCJAc3JjL2NvbXBvbmVudHMvbWR4L0xpc3RcIjtcclxuaW1wb3J0IFVub3JkZXJlZExpc3QgZnJvbSBcIkBzcmMvY29tcG9uZW50cy9tZHgvVW5vcmRlcmVkTGlzdFwiO1xyXG5pbXBvcnQgQ29kZUJsb2NrIGZyb20gXCJAc3JjL2NvbXBvbmVudHMvbWR4L0NvZGVCbG9ja1wiO1xyXG5pbXBvcnQgQ29kZSBmcm9tIFwiQHNyYy9jb21wb25lbnRzL21keC9Db2RlXCI7XHJcblxyXG5cclxudHlwZSBJdGVtID0ge1xyXG4gICAgdXJsOnN0cmluZyxcclxuICAgIHRpdGxlOnN0cmluZyxcclxuICAgIGluZGV4PzpudW1iZXIsXHJcbiAgICBkZXB0aD86bnVtYmVyXHJcbiAgICBpdGVtcz86QXJyYXk8SXRlbT5cclxufTtcclxuXHJcbnR5cGUgUXVlcnlQcm9wcyA9IHtcclxuICAgIG1keDoge1xyXG4gICAgICAgIGlkOiBzdHJpbmcsXHJcbiAgICAgICAgZnJvbnRtYXR0ZXI6IHtcclxuICAgICAgICAgICAgdGl0bGU6IHN0cmluZyxcclxuICAgICAgICAgICAgZGVzY3JpcHRpb246IHN0cmluZ1xyXG4gICAgICAgIH0sXHJcbiAgICAgICAgdGFibGVPZkNvbnRlbnRzOiB7XHJcbiAgICAgICAgICAgIGl0ZW1zOiBBcnJheTxJdGVtPlxyXG4gICAgICAgIH0sXHJcbiAgICAgICAgYm9keTogc3RyaW5nXHJcbiAgICB9LFxyXG4gICAgZmlsZToge1xyXG4gICAgICAgIG1vZGlmaWVkVGltZTogc3RyaW5nXHJcbiAgICB9XHJcbn1cclxuXHJcbmNvbnN0IE1haW5UZW1wbGF0ZSA9ICh7IGRhdGE6IHsgbWR4LCBmaWxlIH0sIGNoaWxkcmVuIH06IFBhZ2VQcm9wczxRdWVyeVByb3BzPikgPT4ge1xyXG4gICAgY29uc3QgaXNXaWRlID0gdXNlUmVjb2lsVmFsdWUoY3JlYXRlQXRvbShUT0dHTEVfV0lERSwgZmFsc2UpKTtcclxuICAgIGNvbnN0IGlzTmF2T3BlbmVkID0gdXNlUmVjb2lsVmFsdWUoY3JlYXRlQXRvbShUT0dHTEVfTkFWLCBmYWxzZSkpO1xyXG4gICAgY29uc3QgdG9jU2V0dGVyID0gdXNlU2V0UmVjb2lsU3RhdGUoY3JlYXRlQXRvbShTRVRfVEFCTEVfT0ZfQ09OVEVOVCwgbWR4LnRhYmxlT2ZDb250ZW50cy5pdGVtcykpO1xyXG5cclxuICAgIHVzZUVmZmVjdCgoKSA9PiB7XHJcbiAgICAgICAgdG9jU2V0dGVyKG1keC50YWJsZU9mQ29udGVudHMuaXRlbXMpO1xyXG4gICAgfSwgW21keF0pXHJcblxyXG4gICAgcmV0dXJuIChcclxuICAgICAgICA8TGF5b3V0PlxyXG4gICAgICAgICAgICA8SGVhZGVySW50ZXJmYWNlPlxyXG4gICAgICAgICAgICAgICAgPEhlYWRlci8+XHJcbiAgICAgICAgICAgIDwvSGVhZGVySW50ZXJmYWNlPlxyXG4gICAgICAgICAgICA8Qm9keUludGVyZmFjZT5cclxuICAgICAgICAgICAgICAgIDxOYXZpZ2F0aW9uSW50ZXJmYWNlIGNsYXNzTmFtZT1cIm5hdmlnYXRpb25cIiBpc05hdk9wZW5lZD17aXNOYXZPcGVuZWR9PlxyXG4gICAgICAgICAgICAgICAgICAgIDxGaXhlcj5cclxuICAgICAgICAgICAgICAgICAgICAgICAgPE5hdmlnYXRpb24vPlxyXG4gICAgICAgICAgICAgICAgICAgIDwvRml4ZXI+XHJcbiAgICAgICAgICAgICAgICA8L05hdmlnYXRpb25JbnRlcmZhY2U+XHJcbiAgICAgICAgICAgICAgICA8Q29udGVudEludGVyZmFjZSBpc05hdk9wZW5lZD17aXNOYXZPcGVuZWR9PlxyXG4gICAgICAgICAgICAgICAgICAgIDxDb250ZW50V3JhcHBlciBpc1dpZGU9e2lzV2lkZX0+XHJcbiAgICAgICAgICAgICAgICAgICAgICAgIDxDb250ZW50VGl0bGUgdGl0bGU9e21keC5mcm9udG1hdHRlci50aXRsZX0gbW9kaWZpZWRUaW1lPXtmaWxlLm1vZGlmaWVkVGltZX0vPlxyXG4gICAgICAgICAgICAgICAgICAgICAgICA8TURYUHJvdmlkZXIgY29tcG9uZW50cz17e1xyXG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgcDogUCxcclxuICAgICAgICAgICAgICAgICAgICAgICAgICAgIGgxOiBIMSxcclxuICAgICAgICAgICAgICAgICAgICAgICAgICAgIGgyOiBIMixcclxuICAgICAgICAgICAgICAgICAgICAgICAgICAgIGgzOiBIMyxcclxuICAgICAgICAgICAgICAgICAgICAgICAgICAgIGg0OiBINCxcclxuICAgICAgICAgICAgICAgICAgICAgICAgICAgIGg1OiBINSxcclxuICAgICAgICAgICAgICAgICAgICAgICAgICAgIGg2OiBINixcclxuICAgICAgICAgICAgICAgICAgICAgICAgICAgIGhyOiBUaGVtYXRpY0JyZWFrLFxyXG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgYmxvY2txdW90ZTogQmxvY2txdW90ZSxcclxuICAgICAgICAgICAgICAgICAgICAgICAgICAgIHVsOiBVbm9yZGVyZWRMaXN0LFxyXG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgb2w6IExpc3QsXHJcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICBwcmU6IENvZGVCbG9jayxcclxuICAgICAgICAgICAgICAgICAgICAgICAgICAgIGNvZGU6IENvZGVcclxuICAgICAgICAgICAgICAgICAgICAgICAgfX0+XHJcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICB7Y2hpbGRyZW59XHJcbiAgICAgICAgICAgICAgICAgICAgICAgIDwvTURYUHJvdmlkZXI+XHJcbiAgICAgICAgICAgICAgICAgICAgPC9Db250ZW50V3JhcHBlcj5cclxuICAgICAgICAgICAgICAgIDwvQ29udGVudEludGVyZmFjZT5cclxuICAgICAgICAgICAgICAgIDxUYWJsZUludGVyZmFjZT5cclxuICAgICAgICAgICAgICAgICAgICA8VGFibGVGaXhlcj5cclxuICAgICAgICAgICAgICAgICAgICAgICAgPFRhYmxlT2ZDb250ZW50Lz5cclxuICAgICAgICAgICAgICAgICAgICA8L1RhYmxlRml4ZXI+XHJcbiAgICAgICAgICAgICAgICA8L1RhYmxlSW50ZXJmYWNlPlxyXG4gICAgICAgICAgICA8L0JvZHlJbnRlcmZhY2U+XHJcbiAgICAgICAgPC9MYXlvdXQ+XHJcbiAgICApXHJcbn07XHJcblxyXG5leHBvcnQgY29uc3QgcXVlcnkgPSBncmFwaHFsYFxyXG5xdWVyeSgkaWQ6IFN0cmluZyEsICRyZWxhdGl2ZVBhdGg6IFN0cmluZyEpIHtcclxuICAgIG1keChpZDoge2VxOiAkaWR9KSB7XHJcbiAgICAgICAgaWRcclxuICAgICAgICBib2R5XHJcbiAgICAgICAgdGFibGVPZkNvbnRlbnRzXHJcbiAgICAgICAgZnJvbnRtYXR0ZXIge1xyXG4gICAgICAgICAgICAgICAgZGVzY3JpcHRpb25cclxuICAgICAgICAgICAgICAgIHRpdGxlXHJcbiAgICAgICAgfVxyXG4gICAgfVxyXG4gICAgZmlsZShyZWxhdGl2ZVBhdGg6IHtlcTogJHJlbGF0aXZlUGF0aH0pIHtcclxuICAgICAgICBtb2RpZmllZFRpbWVcclxuICAgIH1cclxufWA7XHJcblxyXG5jb25zdCBIZWFkZXJJbnRlcmZhY2UgPSBzdHlsZWQuZGl2YFxyXG4gICAgZGlzcGxheTogZmxleDtcclxuICAgIGhlaWdodDogdmFyKC0taGVhZGVyLWhlaWdodCk7XHJcbiAgICB6LWluZGV4OiA1O1xyXG4gICAgcGFkZGluZzogMC42cmVtIDJyZW0gMC42cmVtIDAuNnJlbTtcclxuICAgIHBvc2l0aW9uOiBmaXhlZDtcclxuICAgIHdpZHRoOiAxMDAlO1xyXG4gICAgYmFja2dyb3VuZDogdmFyKC0tYmFja2dyb3VuZC1jb2xvcik7XHJcbiAgICBib3JkZXItYm90dG9tOiAxcHggc29saWQgdmFyKC0tYm9yZGVyLWNvbG9yKTtcclxuYDtcclxuXHJcbmNvbnN0IEJvZHlJbnRlcmZhY2UgPSBzdHlsZWQuZGl2YFxyXG4gICAgcG9zaXRpb246IHJlbGF0aXZlO1xyXG4gICAgZGlzcGxheTogZmxleDtcclxuICAgIG1pbi1oZWlnaHQ6IGNhbGMoMTAwdmggLSB2YXIoLS1oZWFkZXItaGVpZ2h0KSk7XHJcbiAgICBvdmVyZmxvdy14OiBoaWRkZW47XHJcbmA7XHJcblxyXG5jb25zdCBOYXZpZ2F0aW9uSW50ZXJmYWNlID0gc3R5bGVkLmFzaWRlPHtpc05hdk9wZW5lZD86Ym9vbGVhbn0+YFxyXG4gICAgbWFyZ2luLWxlZnQ6ICR7cD0+cC5pc05hdk9wZW5lZCA/ICcwJyA6ICdjYWxjKC0xICogdmFyKC0tc2lkZWJhci13aWR0aCkpJ307XHJcbiAgICBmbGV4OiAwIDAgdmFyKC0tc2lkZWJhci13aWR0aCk7XHJcbiAgICBmb250LXNpemU6IDAuODc1cmVtO1xyXG4gICAgb3ZlcmZsb3cteDogaGlkZGVuO1xyXG4gICAgb3ZlcmZsb3cteTogYXV0bztcclxuICAgIHBhZGRpbmctdG9wOiB2YXIoLS1ib2R5LXBhZGRpbmctdG9wKTtcclxuICAgIHRyYW5zaXRpb246IG1hcmdpbiAwLjI1cyB2YXIoLS1lYXNlLWluLW91dC1xdWFkKTtcclxuICAgIEBtZWRpYSAobWluLXdpZHRoOiAke01lZGlhU2l6ZS5JUEFEX1BST31weCkge1xyXG4gICAgICAgIG1hcmdpbi1sZWZ0OiAwO1xyXG4gICAgfVxyXG5gO1xyXG5cclxuY29uc3QgRml4ZXIgPSBzdHlsZWQubmF2YFxyXG4gICAgcG9zaXRpb246IGZpeGVkO1xyXG4gICAgd2lkdGg6IHZhcigtLXNpZGViYXItd2lkdGgpO1xyXG5gXHJcblxyXG5cclxuY29uc3QgQ29udGVudFdyYXBwZXIgPSBzdHlsZWQubWFpbjx7aXNXaWRlOiBib29sZWFuIH0+YFxyXG4gICAgcGFkZGluZzogMXJlbTtcclxuICAgIHdpZHRoOiAxMDAlO1xyXG4gICAgQG1lZGlhIChtaW4td2lkdGg6ICR7TWVkaWFTaXplLklQQURfQUlSfXB4KSB7XHJcbiAgICAgICAgd2lkdGg6ICR7cD0+cC5pc1dpZGU/ICc5MCUnIDogJzY1JSd9O1xyXG4gICAgfVxyXG5gO1xyXG5cclxuY29uc3QgQ29udGVudEludGVyZmFjZSA9IHN0eWxlZC5tYWluPHtpc05hdk9wZW5lZD86IGJvb2xlYW59PmBcclxuICAgIHdpZHRoOiBjYWxjKDEwMCUgLSAyICogdmFyKC0tc2lkZWJhci13aWR0aCkpO1xyXG4gICAgcGFkZGluZy10b3A6IHZhcigtLWJvZHktcGFkZGluZy10b3ApO1xyXG4gICAgZmxleC1ncm93OiAxO1xyXG4gICAgbWluLXdpZHRoOiAyMHJlbTtcclxuICAgIGRpc3BsYXk6IGZsZXg7XHJcbiAgICBqdXN0aWZ5LWNvbnRlbnQ6IGNlbnRlcjtcclxuICAgIG9wYWNpdHk6ICR7cCA9PiAocC5pc05hdk9wZW5lZCA/IDAuMyA6IDEpfTtcclxuICAgIEBtZWRpYSAobWluLXdpZHRoOiAke01lZGlhU2l6ZS5JUEFEX1BST31weCkge1xyXG4gICAgICAgIG9wYWNpdHk6IDE7XHJcbiAgICB9XHJcbmA7XHJcblxyXG5cclxuY29uc3QgVGFibGVJbnRlcmZhY2UgPSBzdHlsZWQuYXNpZGVgXHJcbiAgICBmb250LXNpemU6IDAuNzVyZW07XHJcbiAgICBmb250LXdlaWdodDogYm9sZDtcclxuICAgIG92ZXJmbG93LXg6IGhpZGRlbjtcclxuICAgIG92ZXJmbG93LXk6IGF1dG87XHJcbiAgICBwYWRkaW5nLXRvcDogdmFyKC0tYm9keS1wYWRkaW5nLXRvcCk7XHJcbiAgICB3aWR0aDogMDtcclxuICAgIHRyYW5zaXRpb246IHdpZHRoIDAuMjVzIHZhcigtLWVhc2UtaW4tb3V0LXF1YWQpO1xyXG4gICAgQG1lZGlhIChtaW4td2lkdGg6ICR7TWVkaWFTaXplLkhEfXB4KSB7XHJcbiAgICAgICAgd2lkdGg6IHZhcigtLXNpZGViYXItd2lkdGgpO1xyXG4gICAgfVxyXG5gO1xyXG5cclxuY29uc3QgVGFibGVGaXhlciA9IHN0eWxlZChGaXhlcilgXHJcbiAgICBwYWRkaW5nOiAwIDFyZW0gMCAxcmVtO1xyXG5gXHJcblxyXG5cclxuZXhwb3J0IGRlZmF1bHQgTWFpblRlbXBsYXRlOyJdfQ== */\",\n  toString: _EMOTION_STRINGIFIED_CSS_ERROR__\n});\nconst ContentWrapper = _styled(\"main\", process.env.NODE_ENV === \"production\" ? {\n  target: \"e1ojob7j3\"\n} : {\n  target: \"e1ojob7j3\",\n  label: \"ContentWrapper\"\n})(\"padding:1rem;width:100%;@media (min-width: \", MediaSize.IPAD_AIR, \"px){width:\", p => p.isWide ? '90%' : '65%', \";}\" + (process.env.NODE_ENV === \"production\" ? \"\" : \"/*# sourceMappingURL=data:application/json;charset=utf-8;base64, */\"));\nconst ContentInterface = _styled(\"main\", process.env.NODE_ENV === \"production\" ? {\n  target: \"e1ojob7j2\"\n} : {\n  target: \"e1ojob7j2\",\n  label: \"ContentInterface\"\n})(\"width:calc(100% - 2 * var(--sidebar-width));padding-top:var(--body-padding-top);flex-grow:1;min-width:20rem;display:flex;justify-content:center;opacity:\", p => p.isNavOpened ? 0.3 : 1, \";@media (min-width: \", MediaSize.IPAD_PRO, \"px){opacity:1;}\" + (process.env.NODE_ENV === \"production\" ? \"\" : \"/*# sourceMappingURL=data:application/json;charset=utf-8;base64, */\"));\nconst TableInterface = _styled(\"aside\", process.env.NODE_ENV === \"production\" ? {\n  target: \"e1ojob7j1\"\n} : {\n  target: \"e1ojob7j1\",\n  label: \"TableInterface\"\n})(\"font-size:0.75rem;font-weight:bold;overflow-x:hidden;overflow-y:auto;padding-top:var(--body-padding-top);width:0;transition:width 0.25s var(--ease-in-out-quad);@media (min-width: \", MediaSize.HD, \"px){width:var(--sidebar-width);}\" + (process.env.NODE_ENV === \"production\" ? \"\" : \"/*# sourceMappingURL=data:application/json;charset=utf-8;base64, */\"));\nconst TableFixer = _styled(Fixer, process.env.NODE_ENV === \"production\" ? {\n  target: \"e1ojob7j0\"\n} : {\n  target: \"e1ojob7j0\",\n  label: \"TableFixer\"\n})(process.env.NODE_ENV === \"production\" ? {\n  name: \"b40oxt\",\n  styles: \"padding:0 1rem 0 1rem\"\n} : {\n  name: \"b40oxt\",\n  styles: \"padding:0 1rem 0 1rem\",\n  map: \"/*# sourceMappingURL=data:application/json;charset=utf-8;base64, */\",\n  toString: _EMOTION_STRINGIFIED_CSS_ERROR__\n});\nMainTemplate\nexport default function GatsbyMDXWrapper(props) {\n  return React.createElement(MainTemplate, props, React.createElement(GATSBY_COMPILED_MDX, props));\n}\n"],"names":["theme","color","borderColor","backgroundColor","text","style","width","height","border","borderRadius","textAlign","margin","fontFamily","wrapper","display","alignItems","level_box","url","level","solved","href","_createMdxContent","props","_components","Object","assign","h1","p","ol","li","code","ul","br","pre","_provideComponents","components","React","TestInfo","id","className","MDXLayout","MainTemplate","_ref","data","mdx","file","children","isWide","useRecoilValue","createAtom","TOGGLE_WIDE","isNavOpened","TOGGLE_NAV","tocSetter","useSetRecoilState","SET_TABLE_OF_CONTENT","tableOfContents","items","useEffect","___EmotionJSX","Layout","HeaderInterface","Header","BodyInterface","NavigationInterface","Fixer","Navigation","ContentInterface","ContentWrapper","ContentTitle","title","frontmatter","modifiedTime","MDXProvider","P","H1","h2","H2","h3","H3","h4","H4","h5","H5","h6","H6","hr","ThematicBreak","blockquote","Blockquote","UnorderedList","List","CodeBlock","Code","TableInterface","TableFixer","TableOfContent","_styled","target","name","styles","MediaSize","IPAD_PRO","IPAD_AIR","HD","GatsbyMDXWrapper","GATSBY_COMPILED_MDX"],"sourceRoot":""}