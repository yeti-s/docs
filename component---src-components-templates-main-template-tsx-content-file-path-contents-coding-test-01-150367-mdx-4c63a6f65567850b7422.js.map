{"version":3,"file":"component---src-components-templates-main-template-tsx-content-file-path-contents-coding-test-01-150367-mdx-4c63a6f65567850b7422.js","mappings":"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","sources":["webpack://yeti-docs/./contents/coding_test/components/MiniBox.jsx","webpack://yeti-docs/./contents/coding_test/components/TestInfo.jsx","webpack://yeti-docs/./contents/coding_test/01_150367.mdx","webpack://yeti-docs/./src/components/templates/MainTemplate.tsx"],"sourcesContent":["import React from \"react\";\r\n\r\nconst theme = {\r\n    'warning': {\r\n        color: '#ffffff',\r\n        borderColor: '#ffeb9d',\r\n        backgroundColor: '#fdd510'\r\n    },\r\n    'error': {\r\n        color: '#ffffff',\r\n        borderColor: '#ffeb9d',\r\n        backgroundColor: '#ff0909'\r\n    },\r\n    'info': {\r\n        color: '#ffffff',\r\n        borderColor: '#ffeb9d',\r\n        backgroundColor: '#107afd'\r\n    }\r\n}\r\n\r\nconst MiniBox = ({color, text}) => {\r\n    const style = {\r\n        backgroundColor: color,\r\n        color: theme[color].color,\r\n        borderColor: theme[color].borderColor,\r\n        backgroundColor: theme[color].backgroundColor,\r\n        width: 65,\r\n        height: 27,\r\n        border: '1px solid',\r\n        borderRadius: '1rem',\r\n        textAlign: 'center',\r\n        margin: '0px 4px 0px 4px',\r\n        fontFamily: `\"IBM Plex Sans\",-apple-system,BlinkMacSystemFont,sans-serif`\r\n    }\r\n\r\n    return <div style={style}>{text}</div>\r\n}\r\n\r\nexport default MiniBox","import React from \"react\";\r\nimport MiniBox from \"./MiniBox\";\r\n\r\nconst style = {\r\n    wrapper: {\r\n        display: 'flex',\r\n        alignItems: 'center'\r\n    },\r\n    level_box: {\r\n        width: 35,\r\n        backgroundColor: 'yellow'\r\n    }\r\n}\r\n\r\nconst TestInfo = ({url, level, solved}) => {\r\n    return (\r\n        <div style={style.wrapper} href={url}>\r\n            <MiniBox color=\"warning\" text={`Lv. ${level}`}/>\r\n            <MiniBox color={solved ? \"info\" : \"error\"} text={solved ? 'sol':'unsol'}/>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default TestInfo","/*@jsxRuntime classic @jsx React.createElement @jsxFrag React.Fragment*/\nimport {useMDXComponents as _provideComponents} from \"@mdx-js/react\";\nimport React from \"react\";\nimport TestInfo from './components/TestInfo';\nfunction _createMdxContent(props) {\n  const _components = Object.assign({\n    h1: \"h1\",\n    ol: \"ol\",\n    li: \"li\",\n    code: \"code\",\n    p: \"p\",\n    br: \"br\",\n    img: \"img\",\n    pre: \"pre\",\n    span: \"span\",\n    math: \"math\",\n    semantics: \"semantics\",\n    mrow: \"mrow\",\n    msup: \"msup\",\n    mn: \"mn\",\n    mi: \"mi\",\n    mo: \"mo\",\n    annotation: \"annotation\"\n  }, _provideComponents(), props.components);\n  return React.createElement(React.Fragment, null, React.createElement(TestInfo, {\n    url: \"https://school.programmers.co.kr/learn/courses/30/lessons/150367\",\n    level: 3,\n    solved: true\n  }), \"\\n\", React.createElement(_components.h1, {\n    id: \"문제-분석\"\n  }, \"문제 분석\"), \"\\n\", React.createElement(_components.ol, null, \"\\n\", React.createElement(_components.li, null, \"이진수를 저장할 빈 문자열을 생성한다.\"), \"\\n\", React.createElement(_components.li, null, \"주어진 이진트리에 더미 노드를 추가하여 포화 이진트리로 만듭니다.\\r\\n\", React.createElement(_components.code, null, \"루트 노드는 그대로 유지합니다.\")), \"\\n\", React.createElement(_components.li, null, \"만들어진 포화 이진트리의 노드들을 가장 왼쪽 노드부터 가장 오른쪽 노드까지, 왼쪽에 있는 순서대로 살펴봅니다.\\r\\n\", React.createElement(_components.code, null, \"노드의 높이는 살펴보는 순서에 영향을 끼치지 않습니다.\")), \"\\n\", React.createElement(_components.li, null, \"살펴본 노드가 더미 노드라면 0, 더미 노드가 아니라면 1을 문자열 뒤에 추가합니다.\"), \"\\n\", React.createElement(_components.li, null, \"문자열에 저장된 이진수를 십진수로 변환합니다.\"), \"\\n\"), \"\\n\", React.createElement(_components.p, null, \"이 문제는 위와 같은 방식으로 입력받은 수를 표현할 수 있는지 없는지 확인하는 문제에요.\", React.createElement(_components.br), \"\\n\", \"사실 말이 저렇게 되어 있지만 예시를 보면 더 이해가 쉽더라구요.\"), \"\\n\", React.createElement(_components.img, {\n    src: \"assets/1_150367/00.PNG\",\n    alt: \"\"\n  }), \"\\n\", React.createElement(_components.p, null, \"7은 이진수로 변환하면 111이 되어요.\\r\\n이를 노드가 세개인 이진 트리로 표현할 수 있죠.\"), \"\\n\", React.createElement(_components.p, null, \"5는 이진수로 변환하면 101이 되어요.\\r\\n이를 노드가 세개인 이진 트리로 표현하면 루트 노드가 더미가 되어야 해요.\\r\\n하지만 그렇다면 하위 노드들을 가질 수 없죠.\\r\\n모순이 되기 때문에 이진 트리로 표현할 수 없다 False 를 놓으면 됩니다.\"), \"\\n\", React.createElement(_components.p, null, \"즉 간단하게 생각하면 더미가 되는 노드가 하위 노드를 가지게 되는지 아닌지 판단만 하면 되는 문제에요.\"), \"\\n\", React.createElement(_components.h1, {\n    id: \"풀이\"\n  }, \"풀이\"), \"\\n\", React.createElement(_components.p, null, \"문제는 이진 트리에서 왼쪽 노드부터 오른쪽 방향으로 순서대로 살펴 1과 0으로 이루어진 문자열을 만들어 냈어요.\\r\\n그리고 이를 십진수로 변환하여 숫자로 만들어 냅니다.\\r\\n우리는 반대로 숫자를 입력으로 받을 거예요.\\r\\n그래서 이진수로 변환하여 배열을 만든 후 이를 통해 이진 트리를 만들어 낼 것입니다.\\r\\n그리고 이 이진 트리를 검사하는 방향으로 가도록 하죠.\"), \"\\n\", React.createElement(_components.p, null, \"먼저 숫자를 이진수로 변환한 후 이진 트리를 나타내는 배열로 생성하는 코드를 짜보도록 하죠.\"), \"\\n\", React.createElement(_components.pre, null, React.createElement(_components.code, {\n    className: \"language-python\"\n  }, \"def create_bin_tree_arr(number):\\r\\n    # create stack\\r\\n    stack = []\\r\\n    i = 1\\r\\n    while number // 2 > 0:\\r\\n        stack.append(number%2)\\r\\n        number = number // 2\\r\\n        i += 1\\r\\n    stack.append(number%2)\\r\\n\\r\\n    unit = 0\\r\\n    while i >= 2**unit:\\r\\n        unit += 1\\r\\n\\r\\n    # create binary list\\r\\n    arr = []\\r\\n    # add prefix\\r\\n    for _ in range(2**(unit)-1 - len(stack)):\\r\\n        arr.append(0)\\r\\n    # stack to list\\r\\n    while len(stack) > 0:\\r\\n        arr.append(stack.pop())\\r\\n\\r\\n    return arr\\n\")), \"\\n\", React.createElement(_components.p, null, \"간단하게 이진 트리를 나타내는 배열로 만들 수 있네요.\\r\\n이제 우리는 더미 노드가 하위 노드를 가지는지 검사를 진행하면 됩니다.\\r\\n이진 트리 형태의 배열은 1, 3, 7, 15, ..., \", React.createElement(_components.span, {\n    className: \"math math-inline\"\n  }, React.createElement(_components.span, {\n    className: \"katex\"\n  }, React.createElement(_components.span, {\n    className: \"katex-mathml\"\n  }, React.createElement(_components.math, {\n    xmlns: \"http://www.w3.org/1998/Math/MathML\"\n  }, React.createElement(_components.semantics, null, React.createElement(_components.mrow, null, React.createElement(_components.msup, null, React.createElement(_components.mn, null, \"2\"), React.createElement(_components.mi, null, \"n\")), React.createElement(_components.mo, null, \"−\"), React.createElement(_components.mn, null, \"1\")), React.createElement(_components.annotation, {\n    encoding: \"application/x-tex\"\n  }, \"2^n - 1\")))), React.createElement(_components.span, {\n    className: \"katex-html\",\n    \"aria-hidden\": \"true\"\n  }, React.createElement(_components.span, {\n    className: \"base\"\n  }, React.createElement(_components.span, {\n    className: \"strut\",\n    style: {\n      height: \"0.7477em\",\n      verticalAlign: \"-0.0833em\"\n    }\n  }), React.createElement(_components.span, {\n    className: \"mord\"\n  }, React.createElement(_components.span, {\n    className: \"mord\"\n  }, \"2\"), React.createElement(_components.span, {\n    className: \"msupsub\"\n  }, React.createElement(_components.span, {\n    className: \"vlist-t\"\n  }, React.createElement(_components.span, {\n    className: \"vlist-r\"\n  }, React.createElement(_components.span, {\n    className: \"vlist\",\n    style: {\n      height: \"0.6644em\"\n    }\n  }, React.createElement(_components.span, {\n    style: {\n      top: \"-3.063em\",\n      marginRight: \"0.05em\"\n    }\n  }, React.createElement(_components.span, {\n    className: \"pstrut\",\n    style: {\n      height: \"2.7em\"\n    }\n  }), React.createElement(_components.span, {\n    className: \"sizing reset-size6 size3 mtight\"\n  }, React.createElement(_components.span, {\n    className: \"mord mathnormal mtight\"\n  }, \"n\")))))))), React.createElement(_components.span, {\n    className: \"mspace\",\n    style: {\n      marginRight: \"0.2222em\"\n    }\n  }), React.createElement(_components.span, {\n    className: \"mbin\"\n  }, \"−\"), React.createElement(_components.span, {\n    className: \"mspace\",\n    style: {\n      marginRight: \"0.2222em\"\n    }\n  })), React.createElement(_components.span, {\n    className: \"base\"\n  }, React.createElement(_components.span, {\n    className: \"strut\",\n    style: {\n      height: \"0.6444em\"\n    }\n  }), React.createElement(_components.span, {\n    className: \"mord\"\n  }, \"1\"))))), \" 크기의 사이즈를 가지고 있어요.\\r\\n이중 루트 노드는 배열의 중앙에 위치합니다.\\r\\n배열 중앙을 기준으로 왼쪽, 오른쪽은 각각 하위 노드들이 되는 거죠.\\r\\n또 하위 노드들의 중앙은 하위 루트가 되는 거죠.\\r\\n이를 이용하여 우리는 루트 노드와 하위 노드들을 검사하고, 하위 노드가 존재하는데 루트가 더미인 사실만 조사하면 됩니다.\"), \"\\n\", React.createElement(_components.pre, null, React.createElement(_components.code, {\n    className: \"language-python\"\n  }, \"def is_valid(arr):\\r\\n    if len(arr) <= 1:\\r\\n        return True\\r\\n    \\r\\n    center_index = len(arr) // 2\\r\\n    left_arr = arr[:center_index]\\r\\n    right_arr = arr[center_index+1:]\\r\\n    has_child = sum(left_arr) > 0 or sum(right_arr) > 0\\r\\n    if has_child and arr[center_index] == 0:\\r\\n        return False\\r\\n    \\r\\n    return True and is_valid(left_arr) and is_valid(right_arr)\\n\")), \"\\n\", React.createElement(_components.p, null, \"이제 필요한 코드는 모두 완성한 것 같네요.\\r\\nsolution 함수에 배열을 만들고 검사하는 코드만 추가하면 완성입니다.\"), \"\\n\", React.createElement(_components.pre, null, React.createElement(_components.code, {\n    className: \"language-python\"\n  }, \"def solution(numbers):\\r\\n    answer = []\\r\\n    \\r\\n    for number in numbers:\\r\\n        bin_tree_arr = create_bin_tree_arr(number)\\r\\n        answer.append(1 if is_valid(bin_tree_arr) else 0)\\r\\n    return answer\\n\")));\n}\nfunction MDXContent(props = {}) {\n  const {wrapper: MDXLayout} = Object.assign({}, _provideComponents(), props.components);\n  return MDXLayout ? React.createElement(MDXLayout, props, React.createElement(_createMdxContent, props)) : _createMdxContent(props);\n}\nexport default MDXContent;\n","import GATSBY_COMPILED_MDX from \"C:/Users/yeti/Documents/github/docs/contents/coding_test/01_150367.mdx\";\nimport _styled from \"@emotion/styled/base\";\nfunction _EMOTION_STRINGIFIED_CSS_ERROR__() {\n  return \"You have tried to stringify object returned from `css` function. It isn't supposed to be used directly (e.g. as value of the `className` prop), but rather handed to emotion so it can handle it (e.g. as value of `css` prop).\";\n}\nimport React, {useEffect} from \"react\";\nimport Layout from \"@src/Layout\";\nimport Navigation from \"@src/components/organisms/navigation/Navigation\";\nimport TableOfContent from \"@src/components/organisms/toc/TableOfContent\";\nimport Header from \"@src/components/organisms/header/Header\";\nimport ContentTitle from \"@src/components/organisms/content/ContentTitle\";\nimport {MDXProvider} from \"@mdx-js/react\";\nimport {useRecoilValue, useSetRecoilState} from \"recoil\";\nimport {createAtom, TOGGLE_WIDE, TOGGLE_NAV, SET_TABLE_OF_CONTENT} from \"@src/context/atoms\";\nimport MediaSize from \"@src/styles/media\";\nimport 'katex/dist/katex.min.css';\nimport P from \"@src/components/mdx/Paragraph\";\nimport {H1, H2, H3, H4, H5, H6} from \"@src/components/mdx/Heading\";\nimport ThematicBreak from \"@src/components/mdx/ThematicBreak\";\nimport Blockquote from \"@src/components/mdx/Blockquote\";\nimport List from \"@src/components/mdx/List\";\nimport UnorderedList from \"@src/components/mdx/UnorderedList\";\nimport CodeBlock from \"@src/components/mdx/CodeBlock\";\nimport Code from \"@src/components/mdx/Code\";\nimport {jsx as ___EmotionJSX} from \"@emotion/react\";\nconst MainTemplate = _ref => {\n  let {data: {mdx, file}, children} = _ref;\n  const isWide = useRecoilValue(createAtom(TOGGLE_WIDE, false));\n  const isNavOpened = useRecoilValue(createAtom(TOGGLE_NAV, false));\n  const tocSetter = useSetRecoilState(createAtom(SET_TABLE_OF_CONTENT, mdx.tableOfContents.items));\n  useEffect(() => {\n    tocSetter(mdx.tableOfContents.items);\n  }, [mdx]);\n  return ___EmotionJSX(Layout, null, ___EmotionJSX(HeaderInterface, null, ___EmotionJSX(Header, null)), ___EmotionJSX(BodyInterface, null, ___EmotionJSX(NavigationInterface, {\n    className: \"navigation\",\n    isNavOpened: isNavOpened\n  }, ___EmotionJSX(Fixer, {\n    className: \"hide_scroll\"\n  }, ___EmotionJSX(Navigation, null))), ___EmotionJSX(ContentInterface, {\n    isNavOpened: isNavOpened\n  }, ___EmotionJSX(ContentWrapper, {\n    isWide: isWide\n  }, ___EmotionJSX(ContentTitle, {\n    title: mdx.frontmatter.title,\n    modifiedTime: file.modifiedTime\n  }), ___EmotionJSX(MDXProvider, {\n    components: {\n      p: P,\n      h1: H1,\n      h2: H2,\n      h3: H3,\n      h4: H4,\n      h5: H5,\n      h6: H6,\n      hr: ThematicBreak,\n      blockquote: Blockquote,\n      ul: UnorderedList,\n      ol: List,\n      pre: CodeBlock,\n      code: Code\n    }\n  }, children))), ___EmotionJSX(TableInterface, null, ___EmotionJSX(TableFixer, null, ___EmotionJSX(TableOfContent, null)))));\n};\nconst query = \"1193272467\";\nconst HeaderInterface = _styled(\"div\", process.env.NODE_ENV === \"production\" ? {\n  target: \"e1ojob7j7\"\n} : {\n  target: \"e1ojob7j7\",\n  label: \"HeaderInterface\"\n})(process.env.NODE_ENV === \"production\" ? {\n  name: \"11t2x7x\",\n  styles: \"display:flex;height:var(--header-height);z-index:5;padding:0.6rem 2rem 0.6rem 0.6rem;position:fixed;width:100%;background:var(--background-color);border-bottom:1px solid var(--border-color)\"\n} : {\n  name: \"11t2x7x\",\n  styles: \"display:flex;height:var(--header-height);z-index:5;padding:0.6rem 2rem 0.6rem 0.6rem;position:fixed;width:100%;background:var(--background-color);border-bottom:1px solid var(--border-color)\",\n  map: \"/*# sourceMappingURL=data:application/json;charset=utf-8;base64, */\",\n  toString: _EMOTION_STRINGIFIED_CSS_ERROR__\n});\nconst BodyInterface = _styled(\"div\", process.env.NODE_ENV === \"production\" ? {\n  target: \"e1ojob7j6\"\n} : {\n  target: \"e1ojob7j6\",\n  label: \"BodyInterface\"\n})(process.env.NODE_ENV === \"production\" ? {\n  name: \"majwgz\",\n  styles: \"position:relative;display:flex;min-height:calc(100vh - var(--header-height));overflow-x:hidden\"\n} : {\n  name: \"majwgz\",\n  styles: \"position:relative;display:flex;min-height:calc(100vh - var(--header-height));overflow-x:hidden\",\n  map: \"/*# sourceMappingURL=data:application/json;charset=utf-8;base64, */\",\n  toString: _EMOTION_STRINGIFIED_CSS_ERROR__\n});\nconst NavigationInterface = _styled(\"aside\", process.env.NODE_ENV === \"production\" ? {\n  target: \"e1ojob7j5\"\n} : {\n  target: \"e1ojob7j5\",\n  label: \"NavigationInterface\"\n})(\"margin-left:\", p => p.isNavOpened ? '0' : 'calc(-1 * var(--sidebar-width))', \";flex:0 0 var(--sidebar-width);font-size:0.875rem;overflow-x:hidden;overflow-y:auto;transition:margin 0.25s var(--ease-in-out-quad);@media (min-width: \", MediaSize.IPAD_PRO, \"px){margin-left:0;}\" + (process.env.NODE_ENV === \"production\" ? \"\" : \"/*# sourceMappingURL=data:application/json;charset=utf-8;base64, */\"));\nconst Fixer = _styled(\"nav\", process.env.NODE_ENV === \"production\" ? {\n  target: \"e1ojob7j4\"\n} : {\n  target: \"e1ojob7j4\",\n  label: \"Fixer\"\n})(process.env.NODE_ENV === \"production\" ? {\n  name: \"l4vzaw\",\n  styles: \"overflow-y:auto;height:100%;padding:var(--body-padding-top) 0 3rem 0;position:fixed;width:var(--sidebar-width);&:-webkit-scrollbar{display:none;}\"\n} : {\n  name: \"l4vzaw\",\n  styles: \"overflow-y:auto;height:100%;padding:var(--body-padding-top) 0 3rem 0;position:fixed;width:var(--sidebar-width);&:-webkit-scrollbar{display:none;}\",\n  map: \"/*# sourceMappingURL=data:application/json;charset=utf-8;base64, */\",\n  toString: _EMOTION_STRINGIFIED_CSS_ERROR__\n});\nconst ContentWrapper = _styled(\"main\", process.env.NODE_ENV === \"production\" ? {\n  target: \"e1ojob7j3\"\n} : {\n  target: \"e1ojob7j3\",\n  label: \"ContentWrapper\"\n})(\"padding:1rem;width:100%;@media (min-width: \", MediaSize.IPAD_AIR, \"px){width:\", p => p.isWide ? '90%' : '65%', \";}\" + (process.env.NODE_ENV === \"production\" ? \"\" : \"/*# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIkM6XFxVc2Vyc1xceWV0aVxcRG9jdW1lbnRzXFxnaXRodWJcXGRvY3NcXHNyY1xcY29tcG9uZW50c1xcdGVtcGxhdGVzXFxNYWluVGVtcGxhdGUudHN4Il0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiJBQW1Lc0QiLCJmaWxlIjoiQzpcXFVzZXJzXFx5ZXRpXFxEb2N1bWVudHNcXGdpdGh1YlxcZG9jc1xcc3JjXFxjb21wb25lbnRzXFx0ZW1wbGF0ZXNcXE1haW5UZW1wbGF0ZS50c3giLCJzb3VyY2VzQ29udGVudCI6WyJpbXBvcnQgUmVhY3QsIHsgdXNlRWZmZWN0IH0gZnJvbSBcInJlYWN0XCI7XHJcbmltcG9ydCBzdHlsZWQgZnJvbSBcIkBlbW90aW9uL3N0eWxlZFwiO1xyXG5cclxuaW1wb3J0IExheW91dCBmcm9tIFwiQHNyYy9MYXlvdXRcIjtcclxuaW1wb3J0IE5hdmlnYXRpb24gZnJvbSBcIkBzcmMvY29tcG9uZW50cy9vcmdhbmlzbXMvbmF2aWdhdGlvbi9OYXZpZ2F0aW9uXCI7XHJcbmltcG9ydCBUYWJsZU9mQ29udGVudCBmcm9tIFwiQHNyYy9jb21wb25lbnRzL29yZ2FuaXNtcy90b2MvVGFibGVPZkNvbnRlbnRcIjtcclxuaW1wb3J0IEhlYWRlciBmcm9tIFwiQHNyYy9jb21wb25lbnRzL29yZ2FuaXNtcy9oZWFkZXIvSGVhZGVyXCI7XHJcbmltcG9ydCBDb250ZW50VGl0bGUgZnJvbSBcIkBzcmMvY29tcG9uZW50cy9vcmdhbmlzbXMvY29udGVudC9Db250ZW50VGl0bGVcIjtcclxuXHJcbmltcG9ydCB0eXBlIHsgUGFnZVByb3BzIH0gZnJvbSBcImdhdHNieVwiO1xyXG5pbXBvcnQgeyBncmFwaHFsIH0gZnJvbSBcImdhdHNieVwiO1xyXG5pbXBvcnQgeyBNRFhQcm92aWRlciB9IGZyb20gXCJAbWR4LWpzL3JlYWN0XCI7XHJcbmltcG9ydCB7IHVzZVJlY29pbFZhbHVlLCB1c2VTZXRSZWNvaWxTdGF0ZSB9IGZyb20gXCJyZWNvaWxcIjtcclxuaW1wb3J0IHsgY3JlYXRlQXRvbSwgVE9HR0xFX1dJREUsIFRPR0dMRV9OQVYsIFNFVF9UQUJMRV9PRl9DT05URU5UIH0gZnJvbSBcIkBzcmMvY29udGV4dC9hdG9tc1wiO1xyXG5pbXBvcnQgTWVkaWFTaXplIGZyb20gXCJAc3JjL3N0eWxlcy9tZWRpYVwiO1xyXG5pbXBvcnQgJ2thdGV4L2Rpc3Qva2F0ZXgubWluLmNzcydcclxuXHJcbi8qIC0tLWN1c3RvbSBNRFggY29tcG9uZW50cy0tLSAqL1xyXG5pbXBvcnQgUCBmcm9tIFwiQHNyYy9jb21wb25lbnRzL21keC9QYXJhZ3JhcGhcIjtcclxuaW1wb3J0IHsgSDEsIEgyLCBIMywgSDQsIEg1LCBINiB9IGZyb20gXCJAc3JjL2NvbXBvbmVudHMvbWR4L0hlYWRpbmdcIjtcclxuaW1wb3J0IFRoZW1hdGljQnJlYWsgZnJvbSBcIkBzcmMvY29tcG9uZW50cy9tZHgvVGhlbWF0aWNCcmVha1wiO1xyXG5pbXBvcnQgQmxvY2txdW90ZSBmcm9tIFwiQHNyYy9jb21wb25lbnRzL21keC9CbG9ja3F1b3RlXCI7XHJcbmltcG9ydCBMaXN0IGZyb20gXCJAc3JjL2NvbXBvbmVudHMvbWR4L0xpc3RcIjtcclxuaW1wb3J0IFVub3JkZXJlZExpc3QgZnJvbSBcIkBzcmMvY29tcG9uZW50cy9tZHgvVW5vcmRlcmVkTGlzdFwiO1xyXG5pbXBvcnQgQ29kZUJsb2NrIGZyb20gXCJAc3JjL2NvbXBvbmVudHMvbWR4L0NvZGVCbG9ja1wiO1xyXG5pbXBvcnQgQ29kZSBmcm9tIFwiQHNyYy9jb21wb25lbnRzL21keC9Db2RlXCI7XHJcblxyXG5cclxudHlwZSBJdGVtID0ge1xyXG4gICAgdXJsOnN0cmluZyxcclxuICAgIHRpdGxlOnN0cmluZyxcclxuICAgIGluZGV4PzpudW1iZXIsXHJcbiAgICBkZXB0aD86bnVtYmVyXHJcbiAgICBpdGVtcz86QXJyYXk8SXRlbT5cclxufTtcclxuXHJcbnR5cGUgUXVlcnlQcm9wcyA9IHtcclxuICAgIG1keDoge1xyXG4gICAgICAgIGlkOiBzdHJpbmcsXHJcbiAgICAgICAgZnJvbnRtYXR0ZXI6IHtcclxuICAgICAgICAgICAgdGl0bGU6IHN0cmluZyxcclxuICAgICAgICAgICAgZGVzY3JpcHRpb246IHN0cmluZ1xyXG4gICAgICAgIH0sXHJcbiAgICAgICAgdGFibGVPZkNvbnRlbnRzOiB7XHJcbiAgICAgICAgICAgIGl0ZW1zOiBBcnJheTxJdGVtPlxyXG4gICAgICAgIH0sXHJcbiAgICAgICAgYm9keTogc3RyaW5nXHJcbiAgICB9LFxyXG4gICAgZmlsZToge1xyXG4gICAgICAgIG1vZGlmaWVkVGltZTogc3RyaW5nXHJcbiAgICB9XHJcbn1cclxuXHJcbmNvbnN0IE1haW5UZW1wbGF0ZSA9ICh7IGRhdGE6IHsgbWR4LCBmaWxlIH0sIGNoaWxkcmVuIH06IFBhZ2VQcm9wczxRdWVyeVByb3BzPikgPT4ge1xyXG4gICAgY29uc3QgaXNXaWRlID0gdXNlUmVjb2lsVmFsdWUoY3JlYXRlQXRvbShUT0dHTEVfV0lERSwgZmFsc2UpKTtcclxuICAgIGNvbnN0IGlzTmF2T3BlbmVkID0gdXNlUmVjb2lsVmFsdWUoY3JlYXRlQXRvbShUT0dHTEVfTkFWLCBmYWxzZSkpO1xyXG4gICAgY29uc3QgdG9jU2V0dGVyID0gdXNlU2V0UmVjb2lsU3RhdGUoY3JlYXRlQXRvbShTRVRfVEFCTEVfT0ZfQ09OVEVOVCwgbWR4LnRhYmxlT2ZDb250ZW50cy5pdGVtcykpO1xyXG5cclxuICAgIHVzZUVmZmVjdCgoKSA9PiB7XHJcbiAgICAgICAgdG9jU2V0dGVyKG1keC50YWJsZU9mQ29udGVudHMuaXRlbXMpO1xyXG4gICAgfSwgW21keF0pXHJcblxyXG4gICAgcmV0dXJuIChcclxuICAgICAgICA8TGF5b3V0PlxyXG4gICAgICAgICAgICA8SGVhZGVySW50ZXJmYWNlPlxyXG4gICAgICAgICAgICAgICAgPEhlYWRlci8+XHJcbiAgICAgICAgICAgIDwvSGVhZGVySW50ZXJmYWNlPlxyXG4gICAgICAgICAgICA8Qm9keUludGVyZmFjZT5cclxuICAgICAgICAgICAgICAgIDxOYXZpZ2F0aW9uSW50ZXJmYWNlIGNsYXNzTmFtZT1cIm5hdmlnYXRpb25cIiBpc05hdk9wZW5lZD17aXNOYXZPcGVuZWR9PlxyXG4gICAgICAgICAgICAgICAgICAgIDxGaXhlciBjbGFzc05hbWU9XCJoaWRlX3Njcm9sbFwiPlxyXG4gICAgICAgICAgICAgICAgICAgICAgICA8TmF2aWdhdGlvbi8+XHJcbiAgICAgICAgICAgICAgICAgICAgPC9GaXhlcj5cclxuICAgICAgICAgICAgICAgIDwvTmF2aWdhdGlvbkludGVyZmFjZT5cclxuICAgICAgICAgICAgICAgIDxDb250ZW50SW50ZXJmYWNlIGlzTmF2T3BlbmVkPXtpc05hdk9wZW5lZH0+XHJcbiAgICAgICAgICAgICAgICAgICAgPENvbnRlbnRXcmFwcGVyIGlzV2lkZT17aXNXaWRlfT5cclxuICAgICAgICAgICAgICAgICAgICAgICAgPENvbnRlbnRUaXRsZSB0aXRsZT17bWR4LmZyb250bWF0dGVyLnRpdGxlfSBtb2RpZmllZFRpbWU9e2ZpbGUubW9kaWZpZWRUaW1lfS8+XHJcbiAgICAgICAgICAgICAgICAgICAgICAgIDxNRFhQcm92aWRlciBjb21wb25lbnRzPXt7XHJcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICBwOiBQLFxyXG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgaDE6IEgxLFxyXG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgaDI6IEgyLFxyXG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgaDM6IEgzLFxyXG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgaDQ6IEg0LFxyXG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgaDU6IEg1LFxyXG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgaDY6IEg2LFxyXG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgaHI6IFRoZW1hdGljQnJlYWssXHJcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICBibG9ja3F1b3RlOiBCbG9ja3F1b3RlLFxyXG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgdWw6IFVub3JkZXJlZExpc3QsXHJcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICBvbDogTGlzdCxcclxuICAgICAgICAgICAgICAgICAgICAgICAgICAgIHByZTogQ29kZUJsb2NrLFxyXG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgY29kZTogQ29kZVxyXG4gICAgICAgICAgICAgICAgICAgICAgICB9fT5cclxuICAgICAgICAgICAgICAgICAgICAgICAgICAgIHtjaGlsZHJlbn1cclxuICAgICAgICAgICAgICAgICAgICAgICAgPC9NRFhQcm92aWRlcj5cclxuICAgICAgICAgICAgICAgICAgICA8L0NvbnRlbnRXcmFwcGVyPlxyXG4gICAgICAgICAgICAgICAgPC9Db250ZW50SW50ZXJmYWNlPlxyXG4gICAgICAgICAgICAgICAgPFRhYmxlSW50ZXJmYWNlPlxyXG4gICAgICAgICAgICAgICAgICAgIDxUYWJsZUZpeGVyPlxyXG4gICAgICAgICAgICAgICAgICAgICAgICA8VGFibGVPZkNvbnRlbnQvPlxyXG4gICAgICAgICAgICAgICAgICAgIDwvVGFibGVGaXhlcj5cclxuICAgICAgICAgICAgICAgIDwvVGFibGVJbnRlcmZhY2U+XHJcbiAgICAgICAgICAgIDwvQm9keUludGVyZmFjZT5cclxuICAgICAgICA8L0xheW91dD5cclxuICAgIClcclxufTtcclxuXHJcbmV4cG9ydCBjb25zdCBxdWVyeSA9IGdyYXBocWxgXHJcbnF1ZXJ5KCRpZDogU3RyaW5nISwgJHJlbGF0aXZlUGF0aDogU3RyaW5nISkge1xyXG4gICAgbWR4KGlkOiB7ZXE6ICRpZH0pIHtcclxuICAgICAgICBpZFxyXG4gICAgICAgIGJvZHlcclxuICAgICAgICB0YWJsZU9mQ29udGVudHMobWF4RGVwdGg6IDIpXHJcbiAgICAgICAgZnJvbnRtYXR0ZXIge1xyXG4gICAgICAgICAgICAgICAgZGVzY3JpcHRpb25cclxuICAgICAgICAgICAgICAgIHRpdGxlXHJcbiAgICAgICAgfVxyXG4gICAgfVxyXG4gICAgZmlsZShyZWxhdGl2ZVBhdGg6IHtlcTogJHJlbGF0aXZlUGF0aH0pIHtcclxuICAgICAgICBtb2RpZmllZFRpbWVcclxuICAgIH1cclxufWA7XHJcblxyXG5jb25zdCBIZWFkZXJJbnRlcmZhY2UgPSBzdHlsZWQuZGl2YFxyXG4gICAgZGlzcGxheTogZmxleDtcclxuICAgIGhlaWdodDogdmFyKC0taGVhZGVyLWhlaWdodCk7XHJcbiAgICB6LWluZGV4OiA1O1xyXG4gICAgcGFkZGluZzogMC42cmVtIDJyZW0gMC42cmVtIDAuNnJlbTtcclxuICAgIHBvc2l0aW9uOiBmaXhlZDtcclxuICAgIHdpZHRoOiAxMDAlO1xyXG4gICAgYmFja2dyb3VuZDogdmFyKC0tYmFja2dyb3VuZC1jb2xvcik7XHJcbiAgICBib3JkZXItYm90dG9tOiAxcHggc29saWQgdmFyKC0tYm9yZGVyLWNvbG9yKTtcclxuYDtcclxuXHJcbmNvbnN0IEJvZHlJbnRlcmZhY2UgPSBzdHlsZWQuZGl2YFxyXG4gICAgcG9zaXRpb246IHJlbGF0aXZlO1xyXG4gICAgZGlzcGxheTogZmxleDtcclxuICAgIG1pbi1oZWlnaHQ6IGNhbGMoMTAwdmggLSB2YXIoLS1oZWFkZXItaGVpZ2h0KSk7XHJcbiAgICBvdmVyZmxvdy14OiBoaWRkZW47XHJcbmA7XHJcblxyXG5jb25zdCBOYXZpZ2F0aW9uSW50ZXJmYWNlID0gc3R5bGVkLmFzaWRlPHtpc05hdk9wZW5lZD86Ym9vbGVhbn0+YFxyXG4gICAgbWFyZ2luLWxlZnQ6ICR7cD0+cC5pc05hdk9wZW5lZCA/ICcwJyA6ICdjYWxjKC0xICogdmFyKC0tc2lkZWJhci13aWR0aCkpJ307XHJcbiAgICBmbGV4OiAwIDAgdmFyKC0tc2lkZWJhci13aWR0aCk7XHJcbiAgICBmb250LXNpemU6IDAuODc1cmVtO1xyXG4gICAgb3ZlcmZsb3cteDogaGlkZGVuO1xyXG4gICAgb3ZlcmZsb3cteTogYXV0bztcclxuICAgIHRyYW5zaXRpb246IG1hcmdpbiAwLjI1cyB2YXIoLS1lYXNlLWluLW91dC1xdWFkKTtcclxuICAgIEBtZWRpYSAobWluLXdpZHRoOiAke01lZGlhU2l6ZS5JUEFEX1BST31weCkge1xyXG4gICAgICAgIG1hcmdpbi1sZWZ0OiAwO1xyXG4gICAgfVxyXG5gO1xyXG5cclxuY29uc3QgRml4ZXIgPSBzdHlsZWQubmF2YFxyXG4gICAgb3ZlcmZsb3cteTogYXV0bztcclxuICAgIGhlaWdodDogMTAwJTtcclxuICAgIHBhZGRpbmc6IHZhcigtLWJvZHktcGFkZGluZy10b3ApIDAgM3JlbSAwO1xyXG4gICAgcG9zaXRpb246IGZpeGVkO1xyXG4gICAgd2lkdGg6IHZhcigtLXNpZGViYXItd2lkdGgpO1xyXG4gICAgJjotd2Via2l0LXNjcm9sbGJhciB7XHJcbiAgICAgICAgZGlzcGxheTogbm9uZTtcclxuICAgIH1cclxuYFxyXG5cclxuXHJcbmNvbnN0IENvbnRlbnRXcmFwcGVyID0gc3R5bGVkLm1haW48e2lzV2lkZTogYm9vbGVhbiB9PmBcclxuICAgIHBhZGRpbmc6IDFyZW07XHJcbiAgICB3aWR0aDogMTAwJTtcclxuICAgIEBtZWRpYSAobWluLXdpZHRoOiAke01lZGlhU2l6ZS5JUEFEX0FJUn1weCkge1xyXG4gICAgICAgIHdpZHRoOiAke3A9PnAuaXNXaWRlPyAnOTAlJyA6ICc2NSUnfTtcclxuICAgIH1cclxuYDtcclxuXHJcbmNvbnN0IENvbnRlbnRJbnRlcmZhY2UgPSBzdHlsZWQubWFpbjx7aXNOYXZPcGVuZWQ/OiBib29sZWFufT5gXHJcbiAgICB3aWR0aDogY2FsYygxMDAlIC0gMiAqIHZhcigtLXNpZGViYXItd2lkdGgpKTtcclxuICAgIHBhZGRpbmctdG9wOiB2YXIoLS1ib2R5LXBhZGRpbmctdG9wKTtcclxuICAgIGZsZXgtZ3JvdzogMTtcclxuICAgIG1pbi13aWR0aDogMjByZW07XHJcbiAgICBkaXNwbGF5OiBmbGV4O1xyXG4gICAganVzdGlmeS1jb250ZW50OiBjZW50ZXI7XHJcbiAgICBvcGFjaXR5OiAke3AgPT4gKHAuaXNOYXZPcGVuZWQgPyAwLjMgOiAxKX07XHJcbiAgICBAbWVkaWEgKG1pbi13aWR0aDogJHtNZWRpYVNpemUuSVBBRF9QUk99cHgpIHtcclxuICAgICAgICBvcGFjaXR5OiAxO1xyXG4gICAgfVxyXG5gO1xyXG5cclxuXHJcbmNvbnN0IFRhYmxlSW50ZXJmYWNlID0gc3R5bGVkLmFzaWRlYFxyXG4gICAgZm9udC1zaXplOiAwLjc1cmVtO1xyXG4gICAgZm9udC13ZWlnaHQ6IGJvbGQ7XHJcbiAgICBvdmVyZmxvdy14OiBoaWRkZW47XHJcbiAgICBvdmVyZmxvdy15OiBhdXRvO1xyXG4gICAgcGFkZGluZy10b3A6IHZhcigtLWJvZHktcGFkZGluZy10b3ApO1xyXG4gICAgd2lkdGg6IDA7XHJcbiAgICB0cmFuc2l0aW9uOiB3aWR0aCAwLjI1cyB2YXIoLS1lYXNlLWluLW91dC1xdWFkKTtcclxuICAgIEBtZWRpYSAobWluLXdpZHRoOiAke01lZGlhU2l6ZS5IRH1weCkge1xyXG4gICAgICAgIHdpZHRoOiB2YXIoLS1zaWRlYmFyLXdpZHRoKTtcclxuICAgIH1cclxuYDtcclxuXHJcbmNvbnN0IFRhYmxlRml4ZXIgPSBzdHlsZWQoRml4ZXIpYFxyXG4gICAgcGFkZGluZzogMCAxcmVtIDAgMXJlbTtcclxuYFxyXG5cclxuXHJcbmV4cG9ydCBkZWZhdWx0IE1haW5UZW1wbGF0ZTsiXX0= */\"));\nconst ContentInterface = _styled(\"main\", process.env.NODE_ENV === \"production\" ? {\n  target: \"e1ojob7j2\"\n} : {\n  target: \"e1ojob7j2\",\n  label: \"ContentInterface\"\n})(\"width:calc(100% - 2 * var(--sidebar-width));padding-top:var(--body-padding-top);flex-grow:1;min-width:20rem;display:flex;justify-content:center;opacity:\", p => p.isNavOpened ? 0.3 : 1, \";@media (min-width: \", MediaSize.IPAD_PRO, \"px){opacity:1;}\" + (process.env.NODE_ENV === \"production\" ? \"\" : \"/*# sourceMappingURL=data:application/json;charset=utf-8;base64, */\"));\nconst TableInterface = _styled(\"aside\", process.env.NODE_ENV === \"production\" ? {\n  target: \"e1ojob7j1\"\n} : {\n  target: \"e1ojob7j1\",\n  label: \"TableInterface\"\n})(\"font-size:0.75rem;font-weight:bold;overflow-x:hidden;overflow-y:auto;padding-top:var(--body-padding-top);width:0;transition:width 0.25s var(--ease-in-out-quad);@media (min-width: \", MediaSize.HD, \"px){width:var(--sidebar-width);}\" + (process.env.NODE_ENV === \"production\" ? \"\" : \"/*# sourceMappingURL=data:application/json;charset=utf-8;base64, */\"));\nconst TableFixer = _styled(Fixer, process.env.NODE_ENV === \"production\" ? {\n  target: \"e1ojob7j0\"\n} : {\n  target: \"e1ojob7j0\",\n  label: \"TableFixer\"\n})(process.env.NODE_ENV === \"production\" ? {\n  name: \"b40oxt\",\n  styles: \"padding:0 1rem 0 1rem\"\n} : {\n  name: \"b40oxt\",\n  styles: \"padding:0 1rem 0 1rem\",\n  map: \"/*# sourceMappingURL=data:application/json;charset=utf-8;base64, */\",\n  toString: _EMOTION_STRINGIFIED_CSS_ERROR__\n});\nMainTemplate\nexport default function GatsbyMDXWrapper(props) {\n  return React.createElement(MainTemplate, props, React.createElement(GATSBY_COMPILED_MDX, props));\n}\n"],"names":["theme","color","borderColor","backgroundColor","text","style","width","height","border","borderRadius","textAlign","margin","fontFamily","wrapper","display","alignItems","level_box","url","level","solved","href","_createMdxContent","props","_components","Object","assign","h1","ol","li","code","p","br","img","pre","span","math","semantics","mrow","msup","mn","mi","mo","annotation","_provideComponents","components","React","TestInfo","id","src","alt","className","xmlns","encoding","verticalAlign","top","marginRight","MDXLayout","MainTemplate","_ref","data","mdx","file","children","isWide","useRecoilValue","createAtom","TOGGLE_WIDE","isNavOpened","TOGGLE_NAV","tocSetter","useSetRecoilState","SET_TABLE_OF_CONTENT","tableOfContents","items","useEffect","___EmotionJSX","Layout","HeaderInterface","Header","BodyInterface","NavigationInterface","Fixer","Navigation","ContentInterface","ContentWrapper","ContentTitle","title","frontmatter","modifiedTime","MDXProvider","P","H1","h2","H2","h3","H3","h4","H4","h5","H5","h6","H6","hr","ThematicBreak","blockquote","Blockquote","ul","UnorderedList","List","CodeBlock","Code","TableInterface","TableFixer","TableOfContent","_styled","target","name","styles","MediaSize","IPAD_PRO","IPAD_AIR","HD","GatsbyMDXWrapper","GATSBY_COMPILED_MDX"],"sourceRoot":""}