{"componentChunkName":"component---src-templates-docs-js","path":"/quantization/index","result":{"data":{"mdx":{"body":"var _excluded = [\"components\"];\nfunction _extends() { _extends = Object.assign ? Object.assign.bind() : function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends.apply(this, arguments); }\nfunction _objectWithoutProperties(source, excluded) { if (source == null) return {}; var target = _objectWithoutPropertiesLoose(source, excluded); var key, i; if (Object.getOwnPropertySymbols) { var sourceSymbolKeys = Object.getOwnPropertySymbols(source); for (i = 0; i < sourceSymbolKeys.length; i++) { key = sourceSymbolKeys[i]; if (excluded.indexOf(key) >= 0) continue; if (!Object.prototype.propertyIsEnumerable.call(source, key)) continue; target[key] = source[key]; } } return target; }\nfunction _objectWithoutPropertiesLoose(source, excluded) { if (source == null) return {}; var target = {}; var sourceKeys = Object.keys(source); var key, i; for (i = 0; i < sourceKeys.length; i++) { key = sourceKeys[i]; if (excluded.indexOf(key) >= 0) continue; target[key] = source[key]; } return target; }\n/* @jsxRuntime classic */\n/* @jsx mdx */\n\nvar _frontmatter = {\n  \"title\": \"Quantization\",\n  \"description\": \"Quantization for Large Language Model\"\n};\nvar layoutProps = {\n  _frontmatter: _frontmatter\n};\nvar MDXLayout = \"wrapper\";\nreturn function MDXContent(_ref) {\n  var components = _ref.components,\n    props = _objectWithoutProperties(_ref, _excluded);\n  return mdx(MDXLayout, _extends({}, layoutProps, props, {\n    components: components,\n    mdxType: \"MDXLayout\"\n  }), mdx(\"p\", null, \"\\uC790\\uC5F0\\uC5B4 \\uCC98\\uB9AC \\uBAA8\\uB378 Quantization\\uC5D0 \\uB300\\uD55C \\uC5F0\\uAD6C \\uB0B4\\uC6A9\\uC744 \\uB2E4\\uB8EC\\uB2E4.\"), mdx(\"h1\", {\n    \"id\": \"내용\"\n  }, \"\\uB0B4\\uC6A9\"), mdx(\"ol\", null, mdx(\"li\", {\n    parentName: \"ol\"\n  }, \"Integer Only Quant\"), mdx(\"li\", {\n    parentName: \"ol\"\n  }, \"SmoothQuant\")));\n}\n;\nMDXContent.isMDXComponent = true;","tableOfContents":{"items":[{"url":"#내용","title":"내용"}]},"frontmatter":{"title":"Quantization","description":"Quantization for Large Language Model"}}},"pageContext":{"id":"de2af3cc-7f91-5374-8aa9-2d614ff75013"}},"staticQueryHashes":["2575348879","2936798523","2940813629"]}