{"componentChunkName":"component---src-components-templates-main-template-tsx-content-file-path-contents-coding-test-01-150367-mdx","path":"/f26c9323-85b4-5447-a255-a6b1bbe64170","result":{"data":{"mdx":{"id":"f26c9323-85b4-5447-a255-a6b1bbe64170","body":"\r\nimport TestInfo from './components/TestInfo'\r\n\r\n<TestInfo url='https://school.programmers.co.kr/learn/courses/30/lessons/150367' level={3} solved={true}></TestInfo>\r\n\r\n# 문제 분석\r\n\r\n1. 이진수를 저장할 빈 문자열을 생성한다.\r\n2. 주어진 이진트리에 더미 노드를 추가하여 포화 이진트리로 만듭니다.\r\n`루트 노드는 그대로 유지합니다.`\r\n3. 만들어진 포화 이진트리의 노드들을 가장 왼쪽 노드부터 가장 오른쪽 노드까지, 왼쪽에 있는 순서대로 살펴봅니다. \r\n`노드의 높이는 살펴보는 순서에 영향을 끼치지 않습니다.`\r\n4. 살펴본 노드가 더미 노드라면 0, 더미 노드가 아니라면 1을 문자열 뒤에 추가합니다.\r\n5. 문자열에 저장된 이진수를 십진수로 변환합니다.\r\n\r\n이 문제는 위와 같은 방식으로 입력받은 수를 표현할 수 있는지 없는지 확인하는 문제에요.  \r\n사실 말이 저렇게 되어 있지만 예시를 보면 더 이해가 쉽더라구요.\r\n\r\n![](assets/1_150367/00.PNG)\r\n\r\n7은 이진수로 변환하면 111이 되어요.\r\n이를 노드가 세개인 이진 트리로 표현할 수 있죠.\r\n\r\n5는 이진수로 변환하면 101이 되어요.\r\n이를 노드가 세개인 이진 트리로 표현하면 루트 노드가 더미가 되어야 해요.\r\n하지만 그렇다면 하위 노드들을 가질 수 없죠.\r\n모순이 되기 때문에 이진 트리로 표현할 수 없다 False 를 놓으면 됩니다.\r\n\r\n즉 간단하게 생각하면 더미가 되는 노드가 하위 노드를 가지게 되는지 아닌지 판단만 하면 되는 문제에요.\r\n\r\n# 풀이\r\n\r\n문제는 이진 트리에서 왼쪽 노드부터 오른쪽 방향으로 순서대로 살펴 1과 0으로 이루어진 문자열을 만들어 냈어요.\r\n그리고 이를 십진수로 변환하여 숫자로 만들어 냅니다.\r\n우리는 반대로 숫자를 입력으로 받을 거예요.\r\n그래서 이진수로 변환하여 배열을 만든 후 이를 통해 이진 트리를 만들어 낼 것입니다.\r\n그리고 이 이진 트리를 검사하는 방향으로 가도록 하죠.\r\n\r\n먼저 숫자를 이진수로 변환한 후 이진 트리를 나타내는 배열로 생성하는 코드를 짜보도록 하죠.\r\n```python\r\ndef create_bin_tree_arr(number):\r\n    # create stack\r\n    stack = []\r\n    i = 1\r\n    while number // 2 > 0:\r\n        stack.append(number%2)\r\n        number = number // 2\r\n        i += 1\r\n    stack.append(number%2)\r\n\r\n    unit = 0\r\n    while i >= 2**unit:\r\n        unit += 1\r\n\r\n    # create binary list\r\n    arr = []\r\n    # add prefix\r\n    for _ in range(2**(unit)-1 - len(stack)):\r\n        arr.append(0)\r\n    # stack to list\r\n    while len(stack) > 0:\r\n        arr.append(stack.pop())\r\n\r\n    return arr\r\n```\r\n\r\n간단하게 이진 트리를 나타내는 배열로 만들 수 있네요.\r\n이제 우리는 더미 노드가 하위 노드를 가지는지 검사를 진행하면 됩니다.\r\n이진 트리 형태의 배열은 1, 3, 7, 15, ..., $2^n - 1$ 크기의 사이즈를 가지고 있어요.\r\n이중 루트 노드는 배열의 중앙에 위치합니다.\r\n배열 중앙을 기준으로 왼쪽, 오른쪽은 각각 하위 노드들이 되는 거죠.\r\n또 하위 노드들의 중앙은 하위 루트가 되는 거죠.\r\n이를 이용하여 우리는 루트 노드와 하위 노드들을 검사하고, 하위 노드가 존재하는데 루트가 더미인 사실만 조사하면 됩니다.\r\n\r\n```python\r\ndef is_valid(arr):\r\n    if len(arr) <= 1:\r\n        return True\r\n    \r\n    center_index = len(arr) // 2\r\n    left_arr = arr[:center_index]\r\n    right_arr = arr[center_index+1:]\r\n    has_child = sum(left_arr) > 0 or sum(right_arr) > 0\r\n    if has_child and arr[center_index] == 0:\r\n        return False\r\n    \r\n    return True and is_valid(left_arr) and is_valid(right_arr)\r\n```\r\n\r\n이제 필요한 코드는 모두 완성한 것 같네요.\r\nsolution 함수에 배열을 만들고 검사하는 코드만 추가하면 완성입니다.\r\n\r\n```python\r\ndef solution(numbers):\r\n    answer = []\r\n    \r\n    for number in numbers:\r\n        bin_tree_arr = create_bin_tree_arr(number)\r\n        answer.append(1 if is_valid(bin_tree_arr) else 0)\r\n    return answer\r\n```","tableOfContents":{"items":[{"url":"#문제-분석","title":"문제 분석"},{"url":"#풀이","title":"풀이"}]},"frontmatter":{"description":"2023 KAKAO BLIND RECRUITMENT ","title":"표현 가능한 이진트리"}},"file":{"modifiedTime":"2023-12-15T15:14:43.397Z"}},"pageContext":{"id":"f26c9323-85b4-5447-a255-a6b1bbe64170","relativePath":"coding_test/01_150367.mdx","frontmatter":{"title":"표현 가능한 이진트리","description":"2023 KAKAO BLIND RECRUITMENT ","order":1}}},"staticQueryHashes":["123912876","2317542362"],"slicesMap":{}}