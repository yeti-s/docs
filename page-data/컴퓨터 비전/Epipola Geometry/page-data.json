{"componentChunkName":"component---src-components-templates-main-template-tsx-content-file-path-contents-cs-cv-epipolar-geometry-epipolar-geometry-mdx","path":"/컴퓨터 비전/Epipola Geometry","result":{"data":{"mdx":{"id":"cadab301-49cf-579f-a12e-e78edb74f2e6","body":"\r\nimport * as Elem from '@elems';\r\n\r\n우리는 앞서 camera calibration을 통해 3차원 물체를 2차원으로 변환하는 방법을 배웠어요.\r\n그렇다면 반대로 2차원 이미지를 이용하여 3차원 물체로 변환하는 과정은 어떨까요?\r\n모두가 알고 있듯, 하나의 이미지만으로는 2차원에서 3차원으로 복구하는 과정을 불가능해요.\r\n차원이 줄어들어 모든 정보를 담을 수 없기 때문이죠.\r\n\r\n그래서 우리는 다른 방법으로 여러 방향에서 촬영한 이미지들을 활용할 수 있겠어요.\r\n이때 필요한 동일한 물체에 대한 서로 다른 지점에서의 이미지 쌍에 대한 기하학적 관계를 다루는 것이 `Epipolar Geometry`입니다.\r\n\r\n\r\n# 용어 정리\r\n\r\n![](00.png)\r\n\r\n먼저 기본적인 용어를 먼저 정리하고 가도록 하죠.\r\n두 카메라의 원점을 연결한 선을 `Baseline`이라고 합니다.\r\n그리고 이 baseline을 지나는 모든 평면을 `epipolar plane`라고 하죠.\r\n이때 동일한 포인트 $X$를 각 이미지에 투영한 포인트를 각각 $x$, $x'$이라고 한다면, $X$, $x$, $x'$ 모두 동일한 epipolar plane위에 존재합니다.\r\n\r\n![](01.png)\r\n\r\n`Epipolar line` $l$, $l'$은 epipolar plane과 이미지가 만나는 라인을 의미해요.\r\n$X$의 위치에 따라 계속해서 달라지죠.\r\n\r\n![](02.png)\r\n\r\n`Epipole` $e$, $e'$은 baseline과 이미지가 만나는 지점이에요.\r\n이는 상대 카메라의 중심이 내 이미지에 어디에 위치하는지를 나타내는 것이죠.\r\n\r\n![](03.png)\r\n![](04.png)\r\n\r\n위 그림과 같이 같은 도자기를 찍은 두 사진이 있다고 하였을 때,\r\nepipole은 꼭 이미지 속에 있는 것이 아니에요.\r\n\r\n![](05.png)\r\n\r\n위 사진도 마찬가지로, 스테레오와 같은 평행하게 한 물체를 찍었다면 epipole은 무한대가 되겟죠.\r\n\r\n![](06.png)\r\n\r\n상대 카메라의 위치가 이미지 내에 있다면 이런 식으로 epipolar line이 이미지 내 카메라 위치로 모이는 것을 볼 수 있어요.\r\n\r\n# Epipolar constraint\r\n\r\n![](07.png)\r\n\r\n동일한 $X$를 촬영한 두 이미지를 봅시다.\r\n좌측 이미지에서 $x$라는 위치에 투영되었다고 할게요.\r\n그렇다면 우측 이미지에서 $X$에 해당하는 $x'$은 epipolar line $l'$위 어딘가에 있을거에요.\r\n그럼 우리는 한쪽 이미지에서 어떠한 feature를 다른 이미지에서 찾기 위해서 epipolar line위 점들만 조사하면 되는 거네요!\r\n\r\n![](08.png)\r\n\r\n위 그림과 같이 좌측 카메라가 평면 $\\pi$를 이미지로 투영한 상태라고 합시다.\r\n이 때 $X$를 투영한 점을 $x$, epipole을 $e$라고 할게요.\r\n\r\n$$\r\nl' = e' \\times x' \\tag{1}\r\n$$\r\n<Elem.Comment>\r\n3차원에서 두 점 p1과 p2를 지나는 직선의 방정식의 normal vector $l$은 $l = x_1 \\times x_2$다.\r\n</Elem.Comment>\r\n우리는 epipolar line $l'$를 식 (1)과 같이 정의할 수 있어요.\r\n이때 $x$를 $x'$로 변환하는 행렬 $H_{\\pi}$라고 하면\r\n\r\n$$\r\nx' = H_{\\pi}x \\qquad l' = e' \\times H_{\\pi} x = F x \\tag{2}\r\n$$\r\n\r\n여기서 $l'$은 $x'$, $e'$을 지나는 직선의 방정식의 normal vector이고 $x'$와 수직관계를 가지기 때문에 ${x'}^T l' = 0$가 되죠.\r\n$e' \\ times H_{\\pi}$를 `fundamental matrix` $F$라고 합시다.\r\n이를 식 (2)와 합쳐보면\r\n\r\n$$\r\n{x'}^T F x = 0 \\tag{3}\r\n$$\r\n\r\n### Properties of the fundamental matrix\r\n\r\nFundamental matrix $F$는 방향성을 가집니다.\r\n\r\n![](12.png)\r\n\r\n또한 모든 epipolar line은 epipole을 지나갑니다.\r\n\r\n![](11.png)\r\n\r\n<Elem.Comment>\r\n사실 이 부분은 좀 이해가 안되는 부분이 많아서 추가로 조사를 해야 할듯!\r\n</Elem.Comment>\r\n\r\n### Fundamental matrix estimation\r\n\r\n즉 $x$와 $x'$ 쌍을 이용하여 식 (3)을 만족시키는 $F$를 찾아야 해요.\r\n$F$는 homogeneous matrix이기 때문에 동일한 상수 배수로 scaling이 됩니다.\r\n이로 인해 전체적인 scale 값은 중요하지 않으므로 하나의 파라미터 자유도를 가지게 돼요.\r\n\r\n$def(F) = 0$, $F$는 rank가 2입니다.\r\n즉, 행렬의 두개의 행이 선형적으로 독립적이죠.\r\n나머지 하나의 행은 다른 행의 선형 조합으로 표현될 수 있습니다.\r\n이로 인해 추가로 하나의 파라미터 자유도를 가지게 돼요.\r\n<Elem.Comment>\r\nrank 2가 뭐지 이해가 안되어서 GPT 답변 가져왔음.\r\n이 관계는  F가 에피폴라 선을 올바르게 나타내려면 계수가 2여야 함을 의미합니다.\r\n왜냐하면, 계수가 3이면, 이는 F가 풀 랭크(full rank)를 가지고 있으며, 그 결과로 모든 점들이 대응 관계를 만족하지 않게 될 것이기 때문입니다.\r\n반면, 계수가 1이거나 0이라면, 이는 F가 충분한 정보를 포함하지 않아 에피폴라 선을 올바르게 나타내지 못할 것임을 의미합니다.\r\n</Elem.Comment>\r\n\r\n$F$는 원래 $3 \\times 3$크기의 행렬이기 떄문에 9개의 파라미터를 조사해야 하지만, 위와 같은 조건으로 7개의 파라미터만 알면 됩니다.\r\n하지만 7개의 포인트 페어를 사용할 경우, 무수히 많은 해를 가질 수 있으므로 총 8개의 독립적인 포인트 페어가 필요해요.\r\n\r\n$$\r\nF = \r\n\\begin{bmatrix}\r\nf_{11} & f_{12} & f_{13} \\\\\r\nf_{21} & f_{22} & f_{23} \\\\\r\nf_{31} & f_{32} & f_{33} \\\\\r\n\\end{bmatrix}\r\n$$\r\n\r\n$$\r\nx'xf_{11} + x'yf_{12} + x'f_{13} + y'xf_{21} + y'yf_{22} + y'f_{23} + xf_{31} + yf_{32} + f_{33} = 0\r\n$$\r\n\r\n$$\r\n\\begin{bmatrix}\r\nx'_1 x_1 & x'_1 y_1 & x'_1 & y'_1 x_1 & y'_1 y_1 & y'_1 & x_1 & y_1 & 1 \\\\\r\n&&&& \\vdots \\\\\r\nx'_n x_n & x'_n y_n & x'_n & y'_n x_n & y'_n y_n & y'_n & x_n & y_n & 1\r\n\\end{bmatrix} f = Af = 0\r\n$$\r\n\r\n### 8 point algorithm\r\n\r\n즉 $f$를 구하는 방법은 아래와 같아요.\r\n1. n개의 포인트 페어를 이용하여 $Af = 0$ 식을 세웁니다.\r\n2. SVD를 통해 $A = UDV^T$\r\n3. $\\left\\| f \\right\\| = 1$에 대해 $\\left\\| Af \\right\\|$를 최소화하는 $V$ 찾습니다. 이를 통해 $\\hat{f}$가 생산되죠.\r\n\r\n![](13.png)\r\n![](14.png)\r\n\r\n그런데 실제로 위 예시를 이용해 epipola line을 구하면 하나의 epipole로 수렴하지 않을 수 있어요.\r\n그래서 하나의 포인트를 보장하기 위해 추가적인 연산을 진행합니다.\r\n$def(F) = 0$인 것을 기억합시다!\r\n\r\n4\\. $\\hat{F}$에 대해 SVD를 진행합니다.  \r\n5\\. $\\hat{F}^*$를 구해 $\\hat{F} - \\hat{F}^*$ \r\n\r\n<Elem.Comment>\r\n자세한 방법은 생략,,\r\n</Elem.Comment>\r\n\r\n![](15.png)\r\n\r\n이를 통해 하나의 epipole을 얻을 수 있게 되었어요.\r\n하지만 이 방법은 늘 정확한 것은 아니에요.\r\n바로 변수들의 resolution 차이 떄문이죠.\r\n\r\n### Data normalization\r\n\r\n$$\r\nx'_1 x_1\\;(10^4) \\quad x'_1 y_1\\;(10^4) \\quad x'_1\\;(10^2) \\quad y'_1 x_1\\;(10^4) \\quad y'_1 y_1\\;(10^4) \\quad y'_1\\;(10^2) \\quad x_1\\;(10^2) \\quad y_1\\;(10^2) \\quad 1 \\\\\r\n$$\r\n\r\n이러한 차이는 좋지 않은 결과를 만들 수 있습니다.\r\n그래서 우리는 픽셀을 normalization하여 계산을 더 정확하게 만드려고 합니다.\r\n\r\n![](16.png)\r\n\r\n전체 과정을 보면 두 이미지를 normalization을 한 값의 fundamental matrix를 구하는 방식입니다.\r\n\r\n![](17.png)\r\n\r\n### RANSAC(RANdom SAmple Consensus)\r\n\r\n실제 사진에서 우리는 8 point algorithm을 사용하기 위해 실제 사진에서 feature matching을 진행하면 꼭 모든 포인트 페어가 잘 매칭되는 것은 아닙니다.\r\n\r\n![](18.png)\r\n\r\n우리는 정확한 페어를 얻어야 정확한 epipole을 얻을 수 있어요.\r\n그래서 우리는 `RANSAC` 알고리즘을 사용합니다.\r\n알고리즘은 다음 순서로 이루어져요.\r\n\r\n1. 무작위로 N개의 랜덤한 포인트를 선택합니다.\r\n2. 이를 통해 적절한 모델을 만들죠.\r\n3. 모델의 결과의 threshold 범위 내 갯수를 이용하여 점수를 계산합니다.\r\n4. 최적의 모델을 찾을 때 까지 1~3을 반복합니다.\r\n\r\n![](19.png)\r\n![](20.png)\r\n![](21.png)\r\n![](22.png)\r\n\r\n이를 8 point algorithm에 적용시켜보면 다음과 같겠네요.\r\n\r\n1. 8개의 랜덤한 포인트 페어를 선택합니다.\r\n2. 8 point algorithm을 이용하여 F를 찾아요.\r\n3. $-\\delta < x'^T F x < \\delta$의 수를 확인합니다.\r\n4. 이를 반복합니다.\r\n\r\n우리는 fundamental matrix $F$를 찾고 이를 이용하여 카메라 포즈 $P$와 $P'$를 찾고 이를 통해 3D points $X$를 찾습니다.\r\n현실에서는 이러한 과정에서 reprojection error가 발생합니다.\r\n","tableOfContents":{"items":[{"url":"#용어-정리","title":"용어 정리"},{"url":"#epipolar-constraint","title":"Epipolar constraint"}]},"frontmatter":{"description":"Epipola Geometry","title":"Epipola Geometry","date":"2023년 12월 11일"}}},"pageContext":{"id":"cadab301-49cf-579f-a12e-e78edb74f2e6","frontmatter":{"title":"Epipola Geometry","description":"Epipola Geometry","date":"2023년 12월 11일","subject":"컴퓨터 비전","visible":true,"order":7}}},"staticQueryHashes":["1569657708","2317542362"],"slicesMap":{}}