{"componentChunkName":"component---src-templates-docs-js","path":"/coding_test/03_132266","result":{"data":{"mdx":{"body":"var _excluded = [\"components\"];\nfunction _extends() { _extends = Object.assign ? Object.assign.bind() : function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends.apply(this, arguments); }\nfunction _objectWithoutProperties(source, excluded) { if (source == null) return {}; var target = _objectWithoutPropertiesLoose(source, excluded); var key, i; if (Object.getOwnPropertySymbols) { var sourceSymbolKeys = Object.getOwnPropertySymbols(source); for (i = 0; i < sourceSymbolKeys.length; i++) { key = sourceSymbolKeys[i]; if (excluded.indexOf(key) >= 0) continue; if (!Object.prototype.propertyIsEnumerable.call(source, key)) continue; target[key] = source[key]; } } return target; }\nfunction _objectWithoutPropertiesLoose(source, excluded) { if (source == null) return {}; var target = {}; var sourceKeys = Object.keys(source); var key, i; for (i = 0; i < sourceKeys.length; i++) { key = sourceKeys[i]; if (excluded.indexOf(key) >= 0) continue; target[key] = source[key]; } return target; }\n/* @jsxRuntime classic */\n/* @jsx mdx */\n\nvar _frontmatter = {\n  \"title\": \"3. 부대 복귀\",\n  \"description\": \"연습문제\"\n};\nvar layoutProps = {\n  _frontmatter: _frontmatter\n};\nvar MDXLayout = \"wrapper\";\nreturn function MDXContent(_ref) {\n  var components = _ref.components,\n    props = _objectWithoutProperties(_ref, _excluded);\n  return mdx(MDXLayout, _extends({}, layoutProps, props, {\n    components: components,\n    mdxType: \"MDXLayout\"\n  }), mdx(TestInfo, {\n    url: \"https://school.programmers.co.kr/learn/courses/30/lessons/132266\",\n    level: 3,\n    solved: false,\n    mdxType: \"TestInfo\"\n  }), mdx(\"h1\", {\n    \"id\": \"문제-분석\"\n  }, \"\\uBB38\\uC81C \\uBD84\\uC11D\"), mdx(\"p\", null, \"\\uAC01 \\uD3EC\\uC778\\uD2B8\\uC5D0\\uC11C \\uD2B9\\uC815 \\uD3EC\\uC778\\uD2B8\\uB85C \\uAC00\\uC57C \\uD569\\uB2C8\\uB2E4.\\n\\uBAA8\\uB4E0 \\uD3EC\\uC778\\uD2B8\\uC640 \\uD3EC\\uC778\\uD2B8 \\uC0AC\\uC774 \\uAC70\\uB9AC\\uB294 1\\uC774\\uB77C\\uACE0 \\uD569\\uB2C8\\uB2E4.\\n\\uADF8\\uB7F0\\uB370 \\uC5B4\\uB5A4 \\uD3EC\\uC778\\uD2B8\\uC5D0\\uC11C \\uD3EC\\uC778\\uD2B8\\uAE4C\\uC9C0 \\uAC00\\uB294 \\uAE38\\uC774 \\uBD80\\uC11C\\uC838\\uC11C \\uAC08 \\uC218 \\uC5C6\\uB294 \\uAE38\\uB3C4 \\uC788\\uB2E4\\uACE0 \\uD558\\uB294\\uAD70\\uC694.\\n\\uC774 \\uB54C \\uCD9C\\uBC1C\\uC9C0\\uC5D0\\uC11C \\uB3C4\\uCC29\\uC9C0\\uAE4C\\uC9C0 \\uAC00\\uC7A5 \\uBE60\\uB974\\uAC8C \\uB3C4\\uCC29\\uD558\\uB294 \\uACBD\\uB85C\\uB97C \\uACC4\\uC0B0\\uD558\\uB294 \\uBB38\\uC81C\\uC5D0\\uC694.\\n\\uBAA8\\uB4E0 \\uACBD\\uB85C\\uAC00 \\uCC28\\uB2E8\\uB418\\uC5B4 \\uB3C4\\uCC29\\uC9C0\\uAE4C\\uC9C0 \\uC808\\uB300 \\uAC08 \\uC218 \\uC5C6\\uB294 \\uACBD\\uC6B0\\uAC00 \\uC0DD\\uAE34\\uB2E4\\uBA74 -1\\uC744 \\uBC18\\uD658\\uD569\\uB2C8\\uB2E4.\"), mdx(\"p\", null, \"\\uAC04\\uB2E8\\uD558\\uAC8C \\uC0DD\\uAC01\\uD558\\uBA74 \\uCD5C\\uB2E8 \\uACBD\\uB85C\\uB97C \\uCC3E\\uB294 \\uB2E4\\uC775\\uC2A4\\uD2B8\\uB77C \\uC54C\\uACE0\\uB9AC\\uC998\\uC73C\\uB85C \\uD480 \\uC218 \\uC788\\uC744 \\uAC83 \\uAC19\\uC544\\uC694.\"), mdx(\"h1\", {\n    \"id\": \"풀이\"\n  }, \"\\uD480\\uC774\"), mdx(\"p\", null, \"\\uBA3C\\uC800 \\uACBD\\uB85C\\uC5D0 \\uB300\\uD55C \\uC5F0\\uACB0\\uC744 \\uB098\\uD0C0\\uB0B4\\uB294 \\uD589\\uB82C\\uC744 \\uB9CC\\uB4E4\\uC5B4\\uBCF4\\uC8E0.\"), mdx(\"pre\", null, mdx(\"code\", {\n    parentName: \"pre\",\n    \"className\": \"language-python\"\n  }, \"import numpy as np\\nmatrix = np.ones((n, n)) * (n+1)\\n\\nfor road in roads:\\n    node1 = road[0]-1\\n    node2 = road[1]-1\\n    matrix[node1, node2] = 1\\n    matrix[node2, node1] = 1\\n\\nfor i in range(n):\\n    matrix[i, i] = 0\\n\")), mdx(\"p\", null, \"\\uC790\\uAE30 \\uC790\\uC2E0\\uC5D0 \\uB300\\uD55C \\uACBD\\uB85C\\uB294 0\\uC73C\\uB85C \\uB9CC\\uB4E4\\uC5B4 \\uC8FC\\uACE0 \\uC5F0\\uACB0\\uC774 \\uB418\\uC9C0 \\uC54A\\uC740 \\uC9C0\\uC5ED\\uC740 \\uD3EC\\uC778\\uD2B8\\uC758 \\uC218 \\uBCF4\\uB2E4 \\uD070 n+1\\uB85C \\uC815\\uD574\\uC8FC\\uC5C8\\uC5B4\\uC694.\\n\\uC774\\uC81C \\uB2E4\\uC775\\uC2A4\\uD2B8\\uB77C \\uC54C\\uACE0\\uB9AC\\uC998\\uC744 \\uC0AC\\uC6A9\\uD558\\uC5EC \\uCD9C\\uBC1C \\uC9C0\\uC810\\uC5D0\\uC11C \\uAC01 \\uD3EC\\uC778\\uD2B8\\uAE4C\\uC9C0 \\uCD5C\\uB2E8 \\uACBD\\uB85C\\uB97C \\uCC3E\\uC544\\uBD05\\uC2DC\\uB2E4.\"), mdx(\"pre\", null, mdx(\"code\", {\n    parentName: \"pre\",\n    \"className\": \"language-python\"\n  }, \"def get_min_route(s, e):\\n    for i in range(n):\\n        argsort = matrix[s].argsort()\\n        min_idx = argsort[i]\\n        if s == min_idx:\\n            continue\\n            \\n        min_val = matrix[s, min_idx]\\n        for j in range(n):\\n            s_to_j = min_val + matrix[min_idx, j]\\n            if matrix[s, j] > s_to_j:\\n                matrix[s, j] = s_to_j\\n                \\n    result = matrix[s, e]\\n    return -1 if result > n else result\\n\")), mdx(\"p\", null, \"\\uAC01 \\uC2DC\\uC791 \\uD3EC\\uC778\\uD2B8\\uC5D0\\uC11C \\uB2E4\\uB978 \\uD3EC\\uC778\\uD2B8\\uAE4C\\uC9C0 \\uC5F0\\uACB0\\uB41C \\uAC70\\uB9AC\\uAC00 \\uC9E7\\uC740 \\uC21C\\uC73C\\uB85C \\uC815\\uB82C\\uD55C \\uD6C4 \\uACBD\\uC720\\uD558\\uC5EC \\uB3C4\\uCC29\\uD558\\uB294 \\uAC12\\uAE4C\\uC9C0 \\uBAA8\\uB450 \\uACC4\\uC0B0\\uD558\\uC600\\uC2B5\\uB2C8\\uB2E4.\\n\\uC774\\uB54C \\uB3C4\\uCC29 \\uD3EC\\uC778\\uD2B8\\uAE4C\\uC9C0 \\uC5F0\\uACB0\\uC774 \\uC5C6\\uC5B4 n+1 \\uAC12\\uC744 \\uADF8\\uB300\\uB85C \\uAC00\\uC9C0\\uB294 \\uACBD\\uB85C\\uC5D0 \\uB300\\uD574 -1\\uC744 \\uBC18\\uD658\\uD558\\uB3C4\\uB85D \\uB9CC\\uB4E4\\uC5B4 \\uC8FC\\uC5C8\\uC5B4\\uC694.\\n\\uC774 \\uCF54\\uB4DC\\uB97C \\uC81C\\uCD9C\\uD558\\uC5EC \\uACB0\\uACFC\\uB97C \\uD655\\uC778\\uD574 \\uBD05\\uC2DC\\uB2E4.\"), mdx(\"pre\", null, mdx(\"code\", {\n    parentName: \"pre\",\n    \"className\": \"language-python\"\n  }, \"import numpy as np\\n\\ndef solution(n, roads, sources, destination):\\n    answer = []\\n    matrix = np.ones((n, n)) * (n+1)\\n    \\n    for road in roads:\\n        node1 = road[0]-1\\n        node2 = road[1]-1\\n        matrix[node1, node2] = 1\\n        matrix[node2, node1] = 1\\n    \\n    for i in range(n):\\n        matrix[i, i] = 0\\n    \\n    def get_min_route(s, e):\\n        for i in range(n):\\n            argsort = matrix[s].argsort()\\n            min_idx = argsort[i]\\n            if s == min_idx:\\n                continue\\n                \\n            min_val = matrix[s, min_idx]\\n            for j in range(n):\\n                s_to_j = min_val + matrix[min_idx, j]\\n                if matrix[s, j] > s_to_j:\\n                    matrix[s, j] = s_to_j\\n                    \\n        result = matrix[s, e]\\n        return -1 if result > n else result\\n                \\n    for source in sources:\\n        result = get_min_route(source-1, destination-1)\\n        answer.append(result)\\n        \\n    return answer\\n\")), mdx(\"p\", null, \"\\uD14C\\uC2A4\\uD2B8 1~5\\uAE4C\\uC9C0 \\uD1B5\\uACFC\\uB77C\\uACE0 \\uB728\\uC9C0\\uB9CC 6~16\\uAE4C\\uC9C0 \\uC2DC\\uAC04\\uCD08\\uACFC, \\uB7F0\\uD0C0\\uC784 \\uC5D0\\uB7EC\\uAC00 \\uBC1C\\uC0DD\\uD558\\uB124\\uC694.\\n\\uC54C\\uACE0\\uB9AC\\uC998\\uC744 \\uC870\\uAE08 \\uB354 \\uD6A8\\uACFC\\uC801\\uC73C\\uB85C \\uC218\\uC815\\uD560 \\uD544\\uC694\\uAC00 \\uC788\\uC2B5\\uB2C8\\uB2E4.\"), mdx(\"p\", null, \"\\uC6B0\\uB9AC\\uB294 \\uC5EC\\uB7EC \\uC2DC\\uC791 \\uD3EC\\uC778\\uD2B8\\uC5D0\\uC11C \\uB3C4\\uCC29 \\uD3EC\\uC778\\uD2B8\\uAE4C\\uC9C0 \\uACBD\\uB85C\\uB97C \\uC870\\uC0AC\\uD558\\uB294 \\uD615\\uD0DC\\uB85C \\uC54C\\uACE0\\uB9AC\\uC998\\uC744 \\uAD6C\\uC131\\uD558\\uC600\\uC9C0\\uB9CC,\\n\\uC774\\uB294 \\uAC01 \\uC2DC\\uC791 \\uD3EC\\uC778\\uD2B8\\uB9C8\\uB2E4 \\uBAA8\\uB4E0 \\uD3EC\\uC778\\uD2B8\\uAE4C\\uC9C0 \\uACBD\\uB85C\\uB97C \\uC870\\uC0AC\\uD558\\uB294 \\uBE44\\uD6A8\\uC728\\uC801\\uC778 \\uBC29\\uBC95\\uC5C8\\uB124\\uC694.\\n\\uC0DD\\uAC01\\uD574\\uBCF4\\uBA74 \\uADF8\\uB0E5 \\uB3C4\\uCC29\\uD3EC\\uC778\\uD2B8\\uC5D0 \\uB300\\uD55C \\uBAA8\\uB4E0 \\uD3EC\\uC778\\uD2B8\\uAE4C\\uC9C0 \\uACBD\\uB85C\\uB97C \\uD55C\\uBC88\\uB9CC \\uC870\\uC0AC\\uD558\\uBA74 \\uB418\\uB294 \\uAC04\\uB2E8\\uD55C \\uBB38\\uC81C\\uC600\\uC5B4\\uC694.\"), mdx(\"p\", null, \"\\uC704 \\uBC29\\uBC95\\uC73C\\uB85C \\uC2DC\\uAC04\\uCD08\\uACFC\\uB294 \\uD574\\uACB0\\uD560 \\uC218 \\uC788\\uACA0\\uC9C0\\uB9CC \\uC815\\uD655\\uD558\\uAC8C \\uC5B4\\uB5A4 \\uBD80\\uBD84\\uC5D0\\uB7EC \\uB7F0\\uD0C0\\uC784 \\uC5D0\\uB7EC\\uAC00 \\uBC1C\\uC0DD\\uD558\\uB294\\uC9C0 \\uD655\\uC778\\uC744 \\uD560 \\uD544\\uC694\\uAC00 \\uC788\\uAC9F\\uC5B4\\uC694.\\n\\uB2E8\\uC21C\\uD788 numpy \\uBC30\\uC5F4 \\uB9CC\\uB4DC\\uB294 \\uAC83\\uB9CC\\uC73C\\uB85C\\uB3C4 \\uB7F0\\uD0C0\\uC784 \\uC624\\uB958\\uAC00 \\uBC1C\\uC0DD\\uD558\\uB124\\uC694.\\n\\uBA54\\uBAA8\\uB9AC\\uC758 \\uD06C\\uAE30\\uAC00 \\uC815\\uD574\\uC838\\uC11C \\uADF8\\uB7F0 \\uAC78\\uAE4C\\uC694?\"), mdx(\"pre\", null, mdx(\"code\", {\n    parentName: \"pre\",\n    \"className\": \"language-python\"\n  }, \"matrix = [[n+1]*n for _ in range(n)]\\n\")), mdx(\"p\", null, \"\\uB2E8\\uC21C\\uD788 \\uC704 \\uBC30\\uC5F4\\uC744 \\uC120\\uC5B8\\uD558\\uB294 \\uAC83\\uB9CC \\uD574\\uB3C4 11~16\\uBC88\\uC774 \\uC2DC\\uAC04 \\uCD08\\uACFC\\uB85C \\uBC1C\\uC0DD\\uD569\\uB2C8\\uB2E4.\\n\\uB2E4\\uC775\\uC2A4\\uD2B8\\uB77C \\uC54C\\uACE0\\uB9AC\\uC998\\uC740 \\uC548\\uB418\\uB294 \\uB4EF,,\"), mdx(\"h1\", {\n    \"id\": \"힌트\"\n  }, \"\\uD78C\\uD2B8\"), mdx(\"p\", null, \"BFS\\uB85C \\uD480\\uBA74 \\uB41C\\uB2E4\\uB294 \\uD78C\\uD2B8\\uB97C \\uBC1B\\uC558\\uC5B4\\uC694.\\n\\uC0AC\\uC2E4\\uC0C1 \\uADF8\\uB0E5 \\uC815\\uB2F5\\uC744 \\uBC1B\\uC740\\uAC70\\uB098 \\uB2E4\\uB984 \\uC5C6\\uB294,,\\n\\uC774\\uB7F0 \\uC54C\\uACE0\\uB9AC\\uC998\\uC5D0 \\uC81C\\uAC00 \\uCDE8\\uC57D\\uD558\\uB2E4\\uB294 \\uAC83\\uC744 \\uB610 \\uAE68\\uB2EB\\uB294 \\uC21C\\uAC04\\uC785\\uB2C8\\uB2E4.\\nBFS\\uC5D0 \\uB300\\uD55C \\uC815\\uB9AC\\uB294 \", mdx(\"a\", {\n    parentName: \"p\",\n    \"href\": \"/algorithm/bfs\"\n  }, \"\\uC5EC\\uAE30\"), \"\\uC5D0 \\uD574\\uB450\\uC5C8\\uC5B4\\uC694\"), mdx(\"p\", null, \"\\uC774 \\uBB38\\uC81C\\uB294 \\uC81C\\uD55C\\uC0AC\\uD56D\\uC744 \\uBCF4\\uBA74 \", mdx(\"span\", {\n    parentName: \"p\",\n    \"className\": \"math math-inline\"\n  }, mdx(\"span\", {\n    parentName: \"span\",\n    \"className\": \"katex\"\n  }, mdx(\"span\", {\n    parentName: \"span\",\n    \"className\": \"katex-mathml\"\n  }, mdx(\"math\", {\n    parentName: \"span\",\n    \"xmlns\": \"http://www.w3.org/1998/Math/MathML\"\n  }, mdx(\"semantics\", {\n    parentName: \"math\"\n  }, mdx(\"mrow\", {\n    parentName: \"semantics\"\n  }, mdx(\"mn\", {\n    parentName: \"mrow\"\n  }, \"3\"), mdx(\"mo\", {\n    parentName: \"mrow\"\n  }, \"\\u2264\"), mdx(\"mi\", {\n    parentName: \"mrow\"\n  }, \"n\"), mdx(\"mo\", {\n    parentName: \"mrow\"\n  }, \"\\u2264\"), mdx(\"mn\", {\n    parentName: \"mrow\"\n  }, \"100000\")), mdx(\"annotation\", {\n    parentName: \"semantics\",\n    \"encoding\": \"application/x-tex\"\n  }, \"3 \\\\leq n \\\\leq 100000\")))), mdx(\"span\", {\n    parentName: \"span\",\n    \"className\": \"katex-html\",\n    \"aria-hidden\": \"true\"\n  }, mdx(\"span\", {\n    parentName: \"span\",\n    \"className\": \"base\"\n  }, mdx(\"span\", {\n    parentName: \"span\",\n    \"className\": \"strut\",\n    \"style\": {\n      \"height\": \"0.7804em\",\n      \"verticalAlign\": \"-0.136em\"\n    }\n  }), mdx(\"span\", {\n    parentName: \"span\",\n    \"className\": \"mord\"\n  }, \"3\"), mdx(\"span\", {\n    parentName: \"span\",\n    \"className\": \"mspace\",\n    \"style\": {\n      \"marginRight\": \"0.2778em\"\n    }\n  }), mdx(\"span\", {\n    parentName: \"span\",\n    \"className\": \"mrel\"\n  }, \"\\u2264\"), mdx(\"span\", {\n    parentName: \"span\",\n    \"className\": \"mspace\",\n    \"style\": {\n      \"marginRight\": \"0.2778em\"\n    }\n  })), mdx(\"span\", {\n    parentName: \"span\",\n    \"className\": \"base\"\n  }, mdx(\"span\", {\n    parentName: \"span\",\n    \"className\": \"strut\",\n    \"style\": {\n      \"height\": \"0.7719em\",\n      \"verticalAlign\": \"-0.136em\"\n    }\n  }), mdx(\"span\", {\n    parentName: \"span\",\n    \"className\": \"mord mathnormal\"\n  }, \"n\"), mdx(\"span\", {\n    parentName: \"span\",\n    \"className\": \"mspace\",\n    \"style\": {\n      \"marginRight\": \"0.2778em\"\n    }\n  }), mdx(\"span\", {\n    parentName: \"span\",\n    \"className\": \"mrel\"\n  }, \"\\u2264\"), mdx(\"span\", {\n    parentName: \"span\",\n    \"className\": \"mspace\",\n    \"style\": {\n      \"marginRight\": \"0.2778em\"\n    }\n  })), mdx(\"span\", {\n    parentName: \"span\",\n    \"className\": \"base\"\n  }, mdx(\"span\", {\n    parentName: \"span\",\n    \"className\": \"strut\",\n    \"style\": {\n      \"height\": \"0.6444em\"\n    }\n  }), mdx(\"span\", {\n    parentName: \"span\",\n    \"className\": \"mord\"\n  }, \"100000\"))))), \"\\uC73C\\uB85C \\uD3EC\\uC778\\uD2B8\\uC758 \\uC218\\uAC00 \\uAD49\\uC7A5\\uD788 \\uB9CE\\uC2B5\\uB2C8\\uB2E4.\\n\\uC774\\uB97C \", mdx(\"span\", {\n    parentName: \"p\",\n    \"className\": \"math math-inline\"\n  }, mdx(\"span\", {\n    parentName: \"span\",\n    \"className\": \"katex\"\n  }, mdx(\"span\", {\n    parentName: \"span\",\n    \"className\": \"katex-mathml\"\n  }, mdx(\"math\", {\n    parentName: \"span\",\n    \"xmlns\": \"http://www.w3.org/1998/Math/MathML\"\n  }, mdx(\"semantics\", {\n    parentName: \"math\"\n  }, mdx(\"mrow\", {\n    parentName: \"semantics\"\n  }, mdx(\"mi\", {\n    parentName: \"mrow\"\n  }, \"n\"), mdx(\"mo\", {\n    parentName: \"mrow\"\n  }, \"\\xD7\"), mdx(\"mi\", {\n    parentName: \"mrow\"\n  }, \"n\")), mdx(\"annotation\", {\n    parentName: \"semantics\",\n    \"encoding\": \"application/x-tex\"\n  }, \"n \\\\times n\")))), mdx(\"span\", {\n    parentName: \"span\",\n    \"className\": \"katex-html\",\n    \"aria-hidden\": \"true\"\n  }, mdx(\"span\", {\n    parentName: \"span\",\n    \"className\": \"base\"\n  }, mdx(\"span\", {\n    parentName: \"span\",\n    \"className\": \"strut\",\n    \"style\": {\n      \"height\": \"0.6667em\",\n      \"verticalAlign\": \"-0.0833em\"\n    }\n  }), mdx(\"span\", {\n    parentName: \"span\",\n    \"className\": \"mord mathnormal\"\n  }, \"n\"), mdx(\"span\", {\n    parentName: \"span\",\n    \"className\": \"mspace\",\n    \"style\": {\n      \"marginRight\": \"0.2222em\"\n    }\n  }), mdx(\"span\", {\n    parentName: \"span\",\n    \"className\": \"mbin\"\n  }, \"\\xD7\"), mdx(\"span\", {\n    parentName: \"span\",\n    \"className\": \"mspace\",\n    \"style\": {\n      \"marginRight\": \"0.2222em\"\n    }\n  })), mdx(\"span\", {\n    parentName: \"span\",\n    \"className\": \"base\"\n  }, mdx(\"span\", {\n    parentName: \"span\",\n    \"className\": \"strut\",\n    \"style\": {\n      \"height\": \"0.4306em\"\n    }\n  }), mdx(\"span\", {\n    parentName: \"span\",\n    \"className\": \"mord mathnormal\"\n  }, \"n\"))))), \" \\uBC30\\uC5F4\\uB85C \\uB9CC\\uB4E0\\uB2E4\\uBA74 \\uBA54\\uBAA8\\uB9AC\\uAC00 \\uBD80\\uC871\\uD560 \\uC218 \\uBC16\\uC5D0 \\uC5C6\\uC5C8\\uC744 \\uAC70\\uC5D0\\uC694.\"), mdx(\"p\", null, \"\\uB610\\uD55C \\uAC01 \\uD3EC\\uC778\\uD2B8\\uC640 \\uD3EC\\uC778\\uD2B8\\uC758 \\uAC70\\uB9AC\\uB294 1\\uB85C \\uB3D9\\uC77C\\uD558\\uB2E4\\uB294 \\uAC83\\uC744 \\uC8FC\\uBAA9\\uD574\\uC57C \\uD588\\uC5B4\\uC694.\\n\\uAC00\\uC911\\uCE58\\uAC00 \\uC5C6\\uB294 \\uD615\\uD0DC\\uC774\\uAE30 \\uB54C\\uBB38\\uC5D0 \\uB2E4\\uC775\\uC2A4\\uD2B8\\uB77C \\uC54C\\uACE0\\uB9AC\\uC998\\uC744 \\uAD73\\uC774 \\uC0AC\\uC6A9\\uD558\\uC9C0 \\uC54A\\uC544\\uB3C4 \\uB418\\uC5C8\\uC9C0\\uC694.\"), mdx(\"pre\", null, mdx(\"code\", {\n    parentName: \"pre\",\n    \"className\": \"language-python\"\n  }, \"graph = [[] for _ in range(n+1)]\\nfor road in roads:\\n    node1 = road[0]\\n    node2 = road[1]\\n    graph[node1].append(node2)\\n    graph[node2].append(node1)\\n\")), mdx(\"p\", null, \"\\uBA3C\\uC800 \\uAC01 \\uB178\\uB4DC\\uB4E4\\uACFC \\uC5F0\\uACB0\\uB41C \\uB178\\uB4DC\\uB4E4\\uC758 \\uAD00\\uACC4\\uB97C \\uADF8\\uB798\\uD504\\uB85C \\uC124\\uC815\\uD558\\uB3C4\\uB85D \\uD569\\uB2C8\\uB2E4.\"), mdx(\"pre\", null, mdx(\"code\", {\n    parentName: \"pre\",\n    \"className\": \"language-python\"\n  }, \"visited = {destination: 0}\\nqueue = deque([(destination, 0)])\\nwhile(len(queue) > 0):\\n    item = queue.popleft()\\n    node = item[0]\\n    wide = item[1]\\n    for tar in graph[node]:\\n        if tar not in visited:\\n            queue.append((tar, wide+1))\\n            visited[tar] = wide+1\\n\")), mdx(\"p\", null, \"\\uC774\\uC81C queue\\uC640 \\uADF8\\uB798\\uD504\\uB97C \\uC774\\uC6A9\\uD558\\uC5EC \\uC5F0\\uACB0\\uB41C \\uB178\\uB4DC\\uB4E4\\uC5D0 \\uB300\\uD55C \\uBC29\\uBB38\\uC744 \\uC6B0\\uC120\\uC73C\\uB85C \\uD558\\uB294 BFS \\uC54C\\uACE0\\uB9AC\\uC998\\uC744 \\uB9CC\\uB4E4\\uC5C8\\uC5B4\\uC694.\\n\\uC774\\uB97C \\uC2E4\\uD589\\uD574\\uBCF4\\uB2C8 \\uAE54\\uB054\\uD558\\uAC8C \\uBAA8\\uB4E0 \\uD14C\\uC2A4\\uD2B8\\uAC00 \\uC644\\uB8CC\\uB418\\uC5C8\\uC5B4\\uC694.\"), mdx(\"p\", null, \"\\uC804\\uCCB4 \\uCF54\\uB4DC\"), mdx(\"pre\", null, mdx(\"code\", {\n    parentName: \"pre\",\n    \"className\": \"language-python\"\n  }, \"from collections import deque\\n\\ndef solution(n, roads, sources, destination):\\n    answer = []\\n    \\n    graph = [[] for _ in range(n+1)]\\n    for road in roads:\\n        node1 = road[0]\\n        node2 = road[1]\\n        graph[node1].append(node2)\\n        graph[node2].append(node1)\\n\\n    visited = {destination: 0}\\n    queue = deque([(destination, 0)])\\n    while(len(queue) > 0):\\n        item = queue.popleft()\\n        node = item[0]\\n        wide = item[1]\\n        for tar in graph[node]:\\n            if tar not in visited:\\n                queue.append((tar, wide+1))\\n                visited[tar] = wide+1\\n        \\n    for source in sources:\\n        if source in visited:\\n            answer.append(visited[source])\\n        else:\\n            answer.append(-1)\\n    \\n    return answer\\n\")));\n}\n;\nMDXContent.isMDXComponent = true;","tableOfContents":{"items":[{"url":"#문제-분석","title":"문제 분석"},{"url":"#풀이","title":"풀이"},{"url":"#힌트","title":"힌트"}]},"frontmatter":{"title":"3. 부대 복귀","description":"연습문제"}}},"pageContext":{"id":"fffe345e-5f47-5ad1-af4a-c22626c41f3f"}},"staticQueryHashes":["2575348879","2936798523","2940813629"]}